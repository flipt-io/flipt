syntax = "proto3";

package environments;

import "google/protobuf/any.proto";
import "gnostic/openapi/v3/annotations.proto";
import "google/api/annotations.proto";

option go_package = "go.flipt.io/flipt/rpc/v2/environments";

service EnvironmentsService {
  rpc ListEnvironments(ListEnvironmentsRequest) returns (ListEnvironmentsResponse) {
    option (google.api.http) = {
      get: "/v2/environments"
    };
    option (gnostic.openapi.v3.operation) = {operation_id: "listEnvironments"};
  }

  rpc GetNamespace(GetNamespaceRequest) returns (NamespaceResponse) {
    option (google.api.http) = {
      get: "/v2/environments/{environment_key}/namespaces/{key}"
    };
    option (gnostic.openapi.v3.operation) = {operation_id: "getNamespace"};
  }
  rpc ListNamespaces(ListNamespacesRequest) returns (ListNamespacesResponse) {
    option (google.api.http) = {
      get: "/v2/environments/{environment_key}/namespaces"
    };
    option (gnostic.openapi.v3.operation) = {operation_id: "listNamespaces"};
  }
  rpc CreateNamespace(UpdateNamespaceRequest) returns (NamespaceResponse) {
    option (google.api.http) = {
      post: "/v2/environments/{environment_key}/namespaces"
      body: "*"
    };
    option (gnostic.openapi.v3.operation) = {operation_id: "createNamespace"};
  }
  rpc UpdateNamespace(UpdateNamespaceRequest) returns (NamespaceResponse) {
    option (google.api.http) = {
      put: "/v2/environments/{environment_key}/namespaces"
      body: "*"
    };
    option (gnostic.openapi.v3.operation) = {operation_id: "updateNamespace"};
  }
  rpc DeleteNamespace(DeleteNamespaceRequest) returns (DeleteNamespaceResponse) {
    option (google.api.http) = {
      delete: "/v2/environments/{environment_key}/namespaces/{key}"
    };
    option (gnostic.openapi.v3.operation) = {operation_id: "deleteNamespace"};
  }

  rpc GetResource(GetResourceRequest) returns (ResourceResponse) {
    option (google.api.http) = {
      get: "/v2/environments/{environment_key}/namespaces/{namespace_key}/resources/{type_url=*}/{key}"
    };
    option (gnostic.openapi.v3.operation) = {operation_id: "getResource"};
  }
  rpc ListResources(ListResourcesRequest) returns (ListResourcesResponse) {
    option (google.api.http) = {
      get: "/v2/environments/{environment_key}/namespaces/{namespace_key}/resources/{type_url=*}"
    };
    option (gnostic.openapi.v3.operation) = {operation_id: "listResources"};
  }
  rpc CreateResource(UpdateResourceRequest) returns (ResourceResponse) {
    option (google.api.http) = {
      post: "/v2/environments/{environment_key}/namespaces/{namespace_key}/resources"
      body: "*"
    };
    option (gnostic.openapi.v3.operation) = {operation_id: "createResource"};
  }
  rpc UpdateResource(UpdateResourceRequest) returns (ResourceResponse) {
    option (google.api.http) = {
      put: "/v2/environments/{environment_key}/namespaces/{namespace_key}/resources"
      body: "*"
    };
    option (gnostic.openapi.v3.operation) = {operation_id: "updateResource"};
  }
  rpc DeleteResource(DeleteResourceRequest) returns (DeleteResourceResponse) {
    option (google.api.http) = {
      delete: "/v2/environments/{environment_key}/namespaces/{namespace_key}/resources/{type_url=*}/{key}"
    };
    option (gnostic.openapi.v3.operation) = {operation_id: "deleteResource"};
  }
}

/* Environments */

message Environment {
  string key = 1;
  string name = 2;
  optional bool default = 3;
}

message ListEnvironmentsRequest {}

message ListEnvironmentsResponse {
  repeated Environment environments = 1;
}

/* Namespace */

message Namespace {
  string key = 1;
  string name = 2;
  optional string description = 3;
  optional bool protected = 4;
}

message GetNamespaceRequest {
  string environment_key = 1;
  string key = 2;
}

message NamespaceResponse {
  Namespace namespace = 1;
  string revision = 100;
}

message ListNamespacesRequest {
  string environment_key = 1;
}

message ListNamespacesResponse {
  repeated Namespace items = 1;
  string revision = 100;
}

message UpdateNamespaceRequest {
  string environment_key = 1;
  string key = 2;
  string name = 3;
  optional string description = 4;
  optional bool protected = 5;
  string revision = 100;
}

message DeleteNamespaceRequest {
  string environment_key = 1;
  string key = 2;
  string revision = 100;
}

message DeleteNamespaceResponse {
  string revision = 100;
}

/* Resource */

message GetResourceRequest {
  string environment_key = 1;
  string namespace_key = 2;
  string type_url = 3;
  string key = 4;
}

message Resource {
  string namespace_key = 1;
  string key = 2;
  google.protobuf.Any payload = 3;
}

message ResourceResponse {
  Resource resource = 1;
  string revision = 100;
}

message ListResourcesRequest {
  string environment_key = 1;
  string namespace_key = 2;
  string type_url = 3;
}

message ListResourcesResponse {
  repeated Resource resources = 1;
  string revision = 100;
}

message UpdateResourceRequest {
  string environment_key = 1;
  string namespace_key = 2;
  string key = 3;
  google.protobuf.Any payload = 4;
  string revision = 100;
}

message DeleteResourceRequest {
  // type is the fully-qualified protobuf message name
  string environment_key = 1;
  string namespace_key = 2;
  string type_url = 3;
  string key = 4;
  string revision = 100;
}

message DeleteResourceResponse {
  string revision = 100;
}
