// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: flipt.proto

package flipt

import (
	_ "github.com/google/gnostic-models/openapiv3"
	_ "go.flipt.io/flipt/rpc/flipt/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EvaluationReason int32

const (
	EvaluationReason_UNKNOWN_EVALUATION_REASON        EvaluationReason = 0
	EvaluationReason_FLAG_DISABLED_EVALUATION_REASON  EvaluationReason = 1
	EvaluationReason_FLAG_NOT_FOUND_EVALUATION_REASON EvaluationReason = 2
	EvaluationReason_MATCH_EVALUATION_REASON          EvaluationReason = 3
	EvaluationReason_ERROR_EVALUATION_REASON          EvaluationReason = 4
	EvaluationReason_DEFAULT_EVALUATION_REASON        EvaluationReason = 5
)

// Enum value maps for EvaluationReason.
var (
	EvaluationReason_name = map[int32]string{
		0: "UNKNOWN_EVALUATION_REASON",
		1: "FLAG_DISABLED_EVALUATION_REASON",
		2: "FLAG_NOT_FOUND_EVALUATION_REASON",
		3: "MATCH_EVALUATION_REASON",
		4: "ERROR_EVALUATION_REASON",
		5: "DEFAULT_EVALUATION_REASON",
	}
	EvaluationReason_value = map[string]int32{
		"UNKNOWN_EVALUATION_REASON":        0,
		"FLAG_DISABLED_EVALUATION_REASON":  1,
		"FLAG_NOT_FOUND_EVALUATION_REASON": 2,
		"MATCH_EVALUATION_REASON":          3,
		"ERROR_EVALUATION_REASON":          4,
		"DEFAULT_EVALUATION_REASON":        5,
	}
)

func (x EvaluationReason) Enum() *EvaluationReason {
	p := new(EvaluationReason)
	*p = x
	return p
}

func (x EvaluationReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvaluationReason) Descriptor() protoreflect.EnumDescriptor {
	return file_flipt_proto_enumTypes[0].Descriptor()
}

func (EvaluationReason) Type() protoreflect.EnumType {
	return &file_flipt_proto_enumTypes[0]
}

func (x EvaluationReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvaluationReason.Descriptor instead.
func (EvaluationReason) EnumDescriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{0}
}

type FlagType int32

const (
	FlagType_VARIANT_FLAG_TYPE FlagType = 0
	FlagType_BOOLEAN_FLAG_TYPE FlagType = 1
)

// Enum value maps for FlagType.
var (
	FlagType_name = map[int32]string{
		0: "VARIANT_FLAG_TYPE",
		1: "BOOLEAN_FLAG_TYPE",
	}
	FlagType_value = map[string]int32{
		"VARIANT_FLAG_TYPE": 0,
		"BOOLEAN_FLAG_TYPE": 1,
	}
)

func (x FlagType) Enum() *FlagType {
	p := new(FlagType)
	*p = x
	return p
}

func (x FlagType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlagType) Descriptor() protoreflect.EnumDescriptor {
	return file_flipt_proto_enumTypes[1].Descriptor()
}

func (FlagType) Type() protoreflect.EnumType {
	return &file_flipt_proto_enumTypes[1]
}

func (x FlagType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlagType.Descriptor instead.
func (FlagType) EnumDescriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{1}
}

type MatchType int32

const (
	MatchType_ALL_MATCH_TYPE MatchType = 0
	MatchType_ANY_MATCH_TYPE MatchType = 1
)

// Enum value maps for MatchType.
var (
	MatchType_name = map[int32]string{
		0: "ALL_MATCH_TYPE",
		1: "ANY_MATCH_TYPE",
	}
	MatchType_value = map[string]int32{
		"ALL_MATCH_TYPE": 0,
		"ANY_MATCH_TYPE": 1,
	}
)

func (x MatchType) Enum() *MatchType {
	p := new(MatchType)
	*p = x
	return p
}

func (x MatchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchType) Descriptor() protoreflect.EnumDescriptor {
	return file_flipt_proto_enumTypes[2].Descriptor()
}

func (MatchType) Type() protoreflect.EnumType {
	return &file_flipt_proto_enumTypes[2]
}

func (x MatchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchType.Descriptor instead.
func (MatchType) EnumDescriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{2}
}

type ComparisonType int32

const (
	ComparisonType_UNKNOWN_COMPARISON_TYPE   ComparisonType = 0
	ComparisonType_STRING_COMPARISON_TYPE    ComparisonType = 1
	ComparisonType_NUMBER_COMPARISON_TYPE    ComparisonType = 2
	ComparisonType_BOOLEAN_COMPARISON_TYPE   ComparisonType = 3
	ComparisonType_DATETIME_COMPARISON_TYPE  ComparisonType = 4
	ComparisonType_ENTITY_ID_COMPARISON_TYPE ComparisonType = 5
)

// Enum value maps for ComparisonType.
var (
	ComparisonType_name = map[int32]string{
		0: "UNKNOWN_COMPARISON_TYPE",
		1: "STRING_COMPARISON_TYPE",
		2: "NUMBER_COMPARISON_TYPE",
		3: "BOOLEAN_COMPARISON_TYPE",
		4: "DATETIME_COMPARISON_TYPE",
		5: "ENTITY_ID_COMPARISON_TYPE",
	}
	ComparisonType_value = map[string]int32{
		"UNKNOWN_COMPARISON_TYPE":   0,
		"STRING_COMPARISON_TYPE":    1,
		"NUMBER_COMPARISON_TYPE":    2,
		"BOOLEAN_COMPARISON_TYPE":   3,
		"DATETIME_COMPARISON_TYPE":  4,
		"ENTITY_ID_COMPARISON_TYPE": 5,
	}
)

func (x ComparisonType) Enum() *ComparisonType {
	p := new(ComparisonType)
	*p = x
	return p
}

func (x ComparisonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComparisonType) Descriptor() protoreflect.EnumDescriptor {
	return file_flipt_proto_enumTypes[3].Descriptor()
}

func (ComparisonType) Type() protoreflect.EnumType {
	return &file_flipt_proto_enumTypes[3]
}

func (x ComparisonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComparisonType.Descriptor instead.
func (ComparisonType) EnumDescriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{3}
}

type RolloutType int32

const (
	RolloutType_UNKNOWN_ROLLOUT_TYPE   RolloutType = 0
	RolloutType_SEGMENT_ROLLOUT_TYPE   RolloutType = 1
	RolloutType_THRESHOLD_ROLLOUT_TYPE RolloutType = 2
)

// Enum value maps for RolloutType.
var (
	RolloutType_name = map[int32]string{
		0: "UNKNOWN_ROLLOUT_TYPE",
		1: "SEGMENT_ROLLOUT_TYPE",
		2: "THRESHOLD_ROLLOUT_TYPE",
	}
	RolloutType_value = map[string]int32{
		"UNKNOWN_ROLLOUT_TYPE":   0,
		"SEGMENT_ROLLOUT_TYPE":   1,
		"THRESHOLD_ROLLOUT_TYPE": 2,
	}
)

func (x RolloutType) Enum() *RolloutType {
	p := new(RolloutType)
	*p = x
	return p
}

func (x RolloutType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RolloutType) Descriptor() protoreflect.EnumDescriptor {
	return file_flipt_proto_enumTypes[4].Descriptor()
}

func (RolloutType) Type() protoreflect.EnumType {
	return &file_flipt_proto_enumTypes[4]
}

func (x RolloutType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RolloutType.Descriptor instead.
func (RolloutType) EnumDescriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{4}
}

type SegmentOperator int32

const (
	SegmentOperator_OR_SEGMENT_OPERATOR  SegmentOperator = 0
	SegmentOperator_AND_SEGMENT_OPERATOR SegmentOperator = 1
)

// Enum value maps for SegmentOperator.
var (
	SegmentOperator_name = map[int32]string{
		0: "OR_SEGMENT_OPERATOR",
		1: "AND_SEGMENT_OPERATOR",
	}
	SegmentOperator_value = map[string]int32{
		"OR_SEGMENT_OPERATOR":  0,
		"AND_SEGMENT_OPERATOR": 1,
	}
)

func (x SegmentOperator) Enum() *SegmentOperator {
	p := new(SegmentOperator)
	*p = x
	return p
}

func (x SegmentOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SegmentOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_flipt_proto_enumTypes[5].Descriptor()
}

func (SegmentOperator) Type() protoreflect.EnumType {
	return &file_flipt_proto_enumTypes[5]
}

func (x SegmentOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SegmentOperator.Descriptor instead.
func (SegmentOperator) EnumDescriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{5}
}

type EvaluationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	FlagKey       string                 `protobuf:"bytes,2,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	EntityId      string                 `protobuf:"bytes,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Context       map[string]string      `protobuf:"bytes,4,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NamespaceKey  string                 `protobuf:"bytes,5,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvaluationRequest) Reset() {
	*x = EvaluationRequest{}
	mi := &file_flipt_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationRequest) ProtoMessage() {}

func (x *EvaluationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationRequest.ProtoReflect.Descriptor instead.
func (*EvaluationRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{0}
}

func (x *EvaluationRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *EvaluationRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *EvaluationRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *EvaluationRequest) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *EvaluationRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type BatchEvaluationRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestId       string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Requests        []*EvaluationRequest   `protobuf:"bytes,2,rep,name=requests,proto3" json:"requests,omitempty"`
	ExcludeNotFound bool                   `protobuf:"varint,3,opt,name=exclude_not_found,json=excludeNotFound,proto3" json:"exclude_not_found,omitempty"`
	NamespaceKey    string                 `protobuf:"bytes,4,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BatchEvaluationRequest) Reset() {
	*x = BatchEvaluationRequest{}
	mi := &file_flipt_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchEvaluationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchEvaluationRequest) ProtoMessage() {}

func (x *BatchEvaluationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchEvaluationRequest.ProtoReflect.Descriptor instead.
func (*BatchEvaluationRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{1}
}

func (x *BatchEvaluationRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *BatchEvaluationRequest) GetRequests() []*EvaluationRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *BatchEvaluationRequest) GetExcludeNotFound() bool {
	if x != nil {
		return x.ExcludeNotFound
	}
	return false
}

func (x *BatchEvaluationRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type BatchEvaluationResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	RequestId             string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Responses             []*EvaluationResponse  `protobuf:"bytes,2,rep,name=responses,proto3" json:"responses,omitempty"`
	RequestDurationMillis float64                `protobuf:"fixed64,3,opt,name=request_duration_millis,json=requestDurationMillis,proto3" json:"request_duration_millis,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *BatchEvaluationResponse) Reset() {
	*x = BatchEvaluationResponse{}
	mi := &file_flipt_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchEvaluationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchEvaluationResponse) ProtoMessage() {}

func (x *BatchEvaluationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchEvaluationResponse.ProtoReflect.Descriptor instead.
func (*BatchEvaluationResponse) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{2}
}

func (x *BatchEvaluationResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *BatchEvaluationResponse) GetResponses() []*EvaluationResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *BatchEvaluationResponse) GetRequestDurationMillis() float64 {
	if x != nil {
		return x.RequestDurationMillis
	}
	return 0
}

type EvaluationResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RequestId      string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	EntityId       string                 `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	RequestContext map[string]string      `protobuf:"bytes,3,rep,name=request_context,json=requestContext,proto3" json:"request_context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Match          bool                   `protobuf:"varint,4,opt,name=match,proto3" json:"match,omitempty"`
	FlagKey        string                 `protobuf:"bytes,5,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	// Deprecated: Marked as deprecated in flipt.proto.
	SegmentKey            string                 `protobuf:"bytes,6,opt,name=segment_key,json=segmentKey,proto3" json:"segment_key,omitempty"`
	Timestamp             *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value                 string                 `protobuf:"bytes,8,opt,name=value,proto3" json:"value,omitempty"`
	RequestDurationMillis float64                `protobuf:"fixed64,9,opt,name=request_duration_millis,json=requestDurationMillis,proto3" json:"request_duration_millis,omitempty"`
	Attachment            string                 `protobuf:"bytes,10,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Reason                EvaluationReason       `protobuf:"varint,11,opt,name=reason,proto3,enum=flipt.EvaluationReason" json:"reason,omitempty"`
	NamespaceKey          string                 `protobuf:"bytes,12,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	SegmentKeys           []string               `protobuf:"bytes,13,rep,name=segment_keys,json=segmentKeys,proto3" json:"segment_keys,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EvaluationResponse) Reset() {
	*x = EvaluationResponse{}
	mi := &file_flipt_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationResponse) ProtoMessage() {}

func (x *EvaluationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationResponse.ProtoReflect.Descriptor instead.
func (*EvaluationResponse) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{3}
}

func (x *EvaluationResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *EvaluationResponse) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *EvaluationResponse) GetRequestContext() map[string]string {
	if x != nil {
		return x.RequestContext
	}
	return nil
}

func (x *EvaluationResponse) GetMatch() bool {
	if x != nil {
		return x.Match
	}
	return false
}

func (x *EvaluationResponse) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

// Deprecated: Marked as deprecated in flipt.proto.
func (x *EvaluationResponse) GetSegmentKey() string {
	if x != nil {
		return x.SegmentKey
	}
	return ""
}

func (x *EvaluationResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EvaluationResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EvaluationResponse) GetRequestDurationMillis() float64 {
	if x != nil {
		return x.RequestDurationMillis
	}
	return 0
}

func (x *EvaluationResponse) GetAttachment() string {
	if x != nil {
		return x.Attachment
	}
	return ""
}

func (x *EvaluationResponse) GetReason() EvaluationReason {
	if x != nil {
		return x.Reason
	}
	return EvaluationReason_UNKNOWN_EVALUATION_REASON
}

func (x *EvaluationResponse) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *EvaluationResponse) GetSegmentKeys() []string {
	if x != nil {
		return x.SegmentKeys
	}
	return nil
}

type Namespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Protected     bool                   `protobuf:"varint,4,opt,name=protected,proto3" json:"protected,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	mi := &file_flipt_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{4}
}

func (x *Namespace) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Namespace) GetProtected() bool {
	if x != nil {
		return x.Protected
	}
	return false
}

func (x *Namespace) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Namespace) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type NamespaceList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespaces    []*Namespace           `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceList) Reset() {
	*x = NamespaceList{}
	mi := &file_flipt_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceList) ProtoMessage() {}

func (x *NamespaceList) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceList.ProtoReflect.Descriptor instead.
func (*NamespaceList) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{5}
}

func (x *NamespaceList) GetNamespaces() []*Namespace {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *NamespaceList) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *NamespaceList) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetNamespaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Reference     string                 `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespaceRequest) Reset() {
	*x = GetNamespaceRequest{}
	mi := &file_flipt_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceRequest) ProtoMessage() {}

func (x *GetNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceRequest.ProtoReflect.Descriptor instead.
func (*GetNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{6}
}

func (x *GetNamespaceRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetNamespaceRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

type ListNamespaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Limit int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Deprecated: Marked as deprecated in flipt.proto.
	Offset        int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Reference     string `protobuf:"bytes,4,opt,name=reference,proto3" json:"reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNamespaceRequest) Reset() {
	*x = ListNamespaceRequest{}
	mi := &file_flipt_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceRequest) ProtoMessage() {}

func (x *ListNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceRequest.ProtoReflect.Descriptor instead.
func (*ListNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{7}
}

func (x *ListNamespaceRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Deprecated: Marked as deprecated in flipt.proto.
func (x *ListNamespaceRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListNamespaceRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListNamespaceRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

type CreateNamespaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNamespaceRequest) Reset() {
	*x = CreateNamespaceRequest{}
	mi := &file_flipt_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceRequest) ProtoMessage() {}

func (x *CreateNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceRequest.ProtoReflect.Descriptor instead.
func (*CreateNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{8}
}

func (x *CreateNamespaceRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CreateNamespaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNamespaceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateNamespaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNamespaceRequest) Reset() {
	*x = UpdateNamespaceRequest{}
	mi := &file_flipt_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNamespaceRequest) ProtoMessage() {}

func (x *UpdateNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNamespaceRequest.ProtoReflect.Descriptor instead.
func (*UpdateNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateNamespaceRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpdateNamespaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNamespaceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DeleteNamespaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Force         bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNamespaceRequest) Reset() {
	*x = DeleteNamespaceRequest{}
	mi := &file_flipt_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceRequest) ProtoMessage() {}

func (x *DeleteNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteNamespaceRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteNamespaceRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type Flag struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Key            string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Enabled        bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Variants       []*Variant             `protobuf:"bytes,7,rep,name=variants,proto3" json:"variants,omitempty"`
	NamespaceKey   string                 `protobuf:"bytes,8,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	Type           FlagType               `protobuf:"varint,9,opt,name=type,proto3,enum=flipt.FlagType" json:"type,omitempty"`
	DefaultVariant *Variant               `protobuf:"bytes,10,opt,name=default_variant,json=defaultVariant,proto3,oneof" json:"default_variant,omitempty"`
	Metadata       *structpb.Struct       `protobuf:"bytes,11,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Flag) Reset() {
	*x = Flag{}
	mi := &file_flipt_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flag) ProtoMessage() {}

func (x *Flag) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flag.ProtoReflect.Descriptor instead.
func (*Flag) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{11}
}

func (x *Flag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Flag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Flag) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Flag) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Flag) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Flag) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Flag) GetVariants() []*Variant {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *Flag) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *Flag) GetType() FlagType {
	if x != nil {
		return x.Type
	}
	return FlagType_VARIANT_FLAG_TYPE
}

func (x *Flag) GetDefaultVariant() *Variant {
	if x != nil {
		return x.DefaultVariant
	}
	return nil
}

func (x *Flag) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type FlagList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flags         []*Flag                `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagList) Reset() {
	*x = FlagList{}
	mi := &file_flipt_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagList) ProtoMessage() {}

func (x *FlagList) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagList.ProtoReflect.Descriptor instead.
func (*FlagList) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{12}
}

func (x *FlagList) GetFlags() []*Flag {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *FlagList) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *FlagList) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetFlagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,2,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	Reference     string                 `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFlagRequest) Reset() {
	*x = GetFlagRequest{}
	mi := &file_flipt_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlagRequest) ProtoMessage() {}

func (x *GetFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlagRequest.ProtoReflect.Descriptor instead.
func (*GetFlagRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{13}
}

func (x *GetFlagRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetFlagRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *GetFlagRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

type ListFlagRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Limit int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Deprecated: Marked as deprecated in flipt.proto.
	Offset        int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	NamespaceKey  string `protobuf:"bytes,4,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	Reference     string `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFlagRequest) Reset() {
	*x = ListFlagRequest{}
	mi := &file_flipt_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFlagRequest) ProtoMessage() {}

func (x *ListFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFlagRequest.ProtoReflect.Descriptor instead.
func (*ListFlagRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{14}
}

func (x *ListFlagRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Deprecated: Marked as deprecated in flipt.proto.
func (x *ListFlagRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListFlagRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListFlagRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *ListFlagRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

type CreateFlagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Enabled       bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,5,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	Type          FlagType               `protobuf:"varint,6,opt,name=type,proto3,enum=flipt.FlagType" json:"type,omitempty"`
	Metadata      *structpb.Struct       `protobuf:"bytes,7,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFlagRequest) Reset() {
	*x = CreateFlagRequest{}
	mi := &file_flipt_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlagRequest) ProtoMessage() {}

func (x *CreateFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlagRequest.ProtoReflect.Descriptor instead.
func (*CreateFlagRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{15}
}

func (x *CreateFlagRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CreateFlagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateFlagRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateFlagRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CreateFlagRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *CreateFlagRequest) GetType() FlagType {
	if x != nil {
		return x.Type
	}
	return FlagType_VARIANT_FLAG_TYPE
}

func (x *CreateFlagRequest) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpdateFlagRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Key              string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Enabled          bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	NamespaceKey     string                 `protobuf:"bytes,5,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	DefaultVariantId string                 `protobuf:"bytes,6,opt,name=default_variant_id,json=defaultVariantId,proto3" json:"default_variant_id,omitempty"`
	Metadata         *structpb.Struct       `protobuf:"bytes,7,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateFlagRequest) Reset() {
	*x = UpdateFlagRequest{}
	mi := &file_flipt_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlagRequest) ProtoMessage() {}

func (x *UpdateFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlagRequest.ProtoReflect.Descriptor instead.
func (*UpdateFlagRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateFlagRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpdateFlagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateFlagRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateFlagRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdateFlagRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *UpdateFlagRequest) GetDefaultVariantId() string {
	if x != nil {
		return x.DefaultVariantId
	}
	return ""
}

func (x *UpdateFlagRequest) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DeleteFlagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,2,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFlagRequest) Reset() {
	*x = DeleteFlagRequest{}
	mi := &file_flipt_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlagRequest) ProtoMessage() {}

func (x *DeleteFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlagRequest.ProtoReflect.Descriptor instead.
func (*DeleteFlagRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteFlagRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteFlagRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type Variant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagKey       string                 `protobuf:"bytes,2,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Attachment    string                 `protobuf:"bytes,8,opt,name=attachment,proto3" json:"attachment,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,9,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Variant) Reset() {
	*x = Variant{}
	mi := &file_flipt_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Variant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variant) ProtoMessage() {}

func (x *Variant) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variant.ProtoReflect.Descriptor instead.
func (*Variant) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{18}
}

func (x *Variant) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Variant) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *Variant) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Variant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Variant) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Variant) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Variant) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Variant) GetAttachment() string {
	if x != nil {
		return x.Attachment
	}
	return ""
}

func (x *Variant) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type CreateVariantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlagKey       string                 `protobuf:"bytes,1,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Attachment    string                 `protobuf:"bytes,5,opt,name=attachment,proto3" json:"attachment,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,6,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVariantRequest) Reset() {
	*x = CreateVariantRequest{}
	mi := &file_flipt_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVariantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVariantRequest) ProtoMessage() {}

func (x *CreateVariantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVariantRequest.ProtoReflect.Descriptor instead.
func (*CreateVariantRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{19}
}

func (x *CreateVariantRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *CreateVariantRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CreateVariantRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVariantRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateVariantRequest) GetAttachment() string {
	if x != nil {
		return x.Attachment
	}
	return ""
}

func (x *CreateVariantRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type UpdateVariantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagKey       string                 `protobuf:"bytes,2,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Attachment    string                 `protobuf:"bytes,6,opt,name=attachment,proto3" json:"attachment,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,7,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVariantRequest) Reset() {
	*x = UpdateVariantRequest{}
	mi := &file_flipt_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVariantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVariantRequest) ProtoMessage() {}

func (x *UpdateVariantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVariantRequest.ProtoReflect.Descriptor instead.
func (*UpdateVariantRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateVariantRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVariantRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *UpdateVariantRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpdateVariantRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateVariantRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateVariantRequest) GetAttachment() string {
	if x != nil {
		return x.Attachment
	}
	return ""
}

func (x *UpdateVariantRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type DeleteVariantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagKey       string                 `protobuf:"bytes,2,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,3,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVariantRequest) Reset() {
	*x = DeleteVariantRequest{}
	mi := &file_flipt_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVariantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVariantRequest) ProtoMessage() {}

func (x *DeleteVariantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVariantRequest.ProtoReflect.Descriptor instead.
func (*DeleteVariantRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteVariantRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteVariantRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *DeleteVariantRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type Segment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Constraints   []*Constraint          `protobuf:"bytes,6,rep,name=constraints,proto3" json:"constraints,omitempty"`
	MatchType     MatchType              `protobuf:"varint,7,opt,name=match_type,json=matchType,proto3,enum=flipt.MatchType" json:"match_type,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,8,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Segment) Reset() {
	*x = Segment{}
	mi := &file_flipt_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{22}
}

func (x *Segment) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Segment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Segment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Segment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Segment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Segment) GetConstraints() []*Constraint {
	if x != nil {
		return x.Constraints
	}
	return nil
}

func (x *Segment) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_ALL_MATCH_TYPE
}

func (x *Segment) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type SegmentList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Segments      []*Segment             `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SegmentList) Reset() {
	*x = SegmentList{}
	mi := &file_flipt_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SegmentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentList) ProtoMessage() {}

func (x *SegmentList) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentList.ProtoReflect.Descriptor instead.
func (*SegmentList) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{23}
}

func (x *SegmentList) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *SegmentList) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *SegmentList) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetSegmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,2,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	Reference     string                 `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSegmentRequest) Reset() {
	*x = GetSegmentRequest{}
	mi := &file_flipt_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSegmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSegmentRequest) ProtoMessage() {}

func (x *GetSegmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSegmentRequest.ProtoReflect.Descriptor instead.
func (*GetSegmentRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{24}
}

func (x *GetSegmentRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetSegmentRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *GetSegmentRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

type ListSegmentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Limit int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Deprecated: Marked as deprecated in flipt.proto.
	Offset        int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	NamespaceKey  string `protobuf:"bytes,4,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	Reference     string `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSegmentRequest) Reset() {
	*x = ListSegmentRequest{}
	mi := &file_flipt_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSegmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSegmentRequest) ProtoMessage() {}

func (x *ListSegmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSegmentRequest.ProtoReflect.Descriptor instead.
func (*ListSegmentRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{25}
}

func (x *ListSegmentRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Deprecated: Marked as deprecated in flipt.proto.
func (x *ListSegmentRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListSegmentRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListSegmentRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *ListSegmentRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

type CreateSegmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MatchType     MatchType              `protobuf:"varint,4,opt,name=match_type,json=matchType,proto3,enum=flipt.MatchType" json:"match_type,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,5,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSegmentRequest) Reset() {
	*x = CreateSegmentRequest{}
	mi := &file_flipt_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSegmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSegmentRequest) ProtoMessage() {}

func (x *CreateSegmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSegmentRequest.ProtoReflect.Descriptor instead.
func (*CreateSegmentRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{26}
}

func (x *CreateSegmentRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CreateSegmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSegmentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateSegmentRequest) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_ALL_MATCH_TYPE
}

func (x *CreateSegmentRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type UpdateSegmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MatchType     MatchType              `protobuf:"varint,4,opt,name=match_type,json=matchType,proto3,enum=flipt.MatchType" json:"match_type,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,5,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSegmentRequest) Reset() {
	*x = UpdateSegmentRequest{}
	mi := &file_flipt_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSegmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSegmentRequest) ProtoMessage() {}

func (x *UpdateSegmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSegmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateSegmentRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateSegmentRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpdateSegmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSegmentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateSegmentRequest) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_ALL_MATCH_TYPE
}

func (x *UpdateSegmentRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type DeleteSegmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,2,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSegmentRequest) Reset() {
	*x = DeleteSegmentRequest{}
	mi := &file_flipt_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSegmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSegmentRequest) ProtoMessage() {}

func (x *DeleteSegmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSegmentRequest.ProtoReflect.Descriptor instead.
func (*DeleteSegmentRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteSegmentRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteSegmentRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type Constraint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SegmentKey    string                 `protobuf:"bytes,2,opt,name=segment_key,json=segmentKey,proto3" json:"segment_key,omitempty"`
	Type          ComparisonType         `protobuf:"varint,3,opt,name=type,proto3,enum=flipt.ComparisonType" json:"type,omitempty"`
	Property      string                 `protobuf:"bytes,4,opt,name=property,proto3" json:"property,omitempty"`
	Operator      string                 `protobuf:"bytes,5,opt,name=operator,proto3" json:"operator,omitempty"`
	Value         string                 `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,9,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	Description   string                 `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Constraint) Reset() {
	*x = Constraint{}
	mi := &file_flipt_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Constraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Constraint) ProtoMessage() {}

func (x *Constraint) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Constraint.ProtoReflect.Descriptor instead.
func (*Constraint) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{29}
}

func (x *Constraint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Constraint) GetSegmentKey() string {
	if x != nil {
		return x.SegmentKey
	}
	return ""
}

func (x *Constraint) GetType() ComparisonType {
	if x != nil {
		return x.Type
	}
	return ComparisonType_UNKNOWN_COMPARISON_TYPE
}

func (x *Constraint) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (x *Constraint) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *Constraint) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Constraint) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Constraint) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Constraint) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *Constraint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateConstraintRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegmentKey    string                 `protobuf:"bytes,1,opt,name=segment_key,json=segmentKey,proto3" json:"segment_key,omitempty"`
	Type          ComparisonType         `protobuf:"varint,2,opt,name=type,proto3,enum=flipt.ComparisonType" json:"type,omitempty"`
	Property      string                 `protobuf:"bytes,3,opt,name=property,proto3" json:"property,omitempty"`
	Operator      string                 `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	Value         string                 `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,6,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	Description   string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConstraintRequest) Reset() {
	*x = CreateConstraintRequest{}
	mi := &file_flipt_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConstraintRequest) ProtoMessage() {}

func (x *CreateConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConstraintRequest.ProtoReflect.Descriptor instead.
func (*CreateConstraintRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{30}
}

func (x *CreateConstraintRequest) GetSegmentKey() string {
	if x != nil {
		return x.SegmentKey
	}
	return ""
}

func (x *CreateConstraintRequest) GetType() ComparisonType {
	if x != nil {
		return x.Type
	}
	return ComparisonType_UNKNOWN_COMPARISON_TYPE
}

func (x *CreateConstraintRequest) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (x *CreateConstraintRequest) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *CreateConstraintRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CreateConstraintRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *CreateConstraintRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateConstraintRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SegmentKey    string                 `protobuf:"bytes,2,opt,name=segment_key,json=segmentKey,proto3" json:"segment_key,omitempty"`
	Type          ComparisonType         `protobuf:"varint,3,opt,name=type,proto3,enum=flipt.ComparisonType" json:"type,omitempty"`
	Property      string                 `protobuf:"bytes,4,opt,name=property,proto3" json:"property,omitempty"`
	Operator      string                 `protobuf:"bytes,5,opt,name=operator,proto3" json:"operator,omitempty"`
	Value         string                 `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,7,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	Description   string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConstraintRequest) Reset() {
	*x = UpdateConstraintRequest{}
	mi := &file_flipt_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConstraintRequest) ProtoMessage() {}

func (x *UpdateConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConstraintRequest.ProtoReflect.Descriptor instead.
func (*UpdateConstraintRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateConstraintRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateConstraintRequest) GetSegmentKey() string {
	if x != nil {
		return x.SegmentKey
	}
	return ""
}

func (x *UpdateConstraintRequest) GetType() ComparisonType {
	if x != nil {
		return x.Type
	}
	return ComparisonType_UNKNOWN_COMPARISON_TYPE
}

func (x *UpdateConstraintRequest) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (x *UpdateConstraintRequest) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *UpdateConstraintRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UpdateConstraintRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *UpdateConstraintRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DeleteConstraintRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SegmentKey    string                 `protobuf:"bytes,2,opt,name=segment_key,json=segmentKey,proto3" json:"segment_key,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,3,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConstraintRequest) Reset() {
	*x = DeleteConstraintRequest{}
	mi := &file_flipt_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConstraintRequest) ProtoMessage() {}

func (x *DeleteConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConstraintRequest.ProtoReflect.Descriptor instead.
func (*DeleteConstraintRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteConstraintRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteConstraintRequest) GetSegmentKey() string {
	if x != nil {
		return x.SegmentKey
	}
	return ""
}

func (x *DeleteConstraintRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type Rollout struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NamespaceKey string                 `protobuf:"bytes,2,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	FlagKey      string                 `protobuf:"bytes,3,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	Type         RolloutType            `protobuf:"varint,4,opt,name=type,proto3,enum=flipt.RolloutType" json:"type,omitempty"`
	Rank         int32                  `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`
	Description  string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Types that are valid to be assigned to Rule:
	//
	//	*Rollout_Segment
	//	*Rollout_Threshold
	Rule          isRollout_Rule `protobuf_oneof:"rule"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rollout) Reset() {
	*x = Rollout{}
	mi := &file_flipt_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rollout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rollout) ProtoMessage() {}

func (x *Rollout) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rollout.ProtoReflect.Descriptor instead.
func (*Rollout) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{33}
}

func (x *Rollout) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Rollout) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *Rollout) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *Rollout) GetType() RolloutType {
	if x != nil {
		return x.Type
	}
	return RolloutType_UNKNOWN_ROLLOUT_TYPE
}

func (x *Rollout) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Rollout) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Rollout) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Rollout) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Rollout) GetRule() isRollout_Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *Rollout) GetSegment() *RolloutSegment {
	if x != nil {
		if x, ok := x.Rule.(*Rollout_Segment); ok {
			return x.Segment
		}
	}
	return nil
}

func (x *Rollout) GetThreshold() *RolloutThreshold {
	if x != nil {
		if x, ok := x.Rule.(*Rollout_Threshold); ok {
			return x.Threshold
		}
	}
	return nil
}

type isRollout_Rule interface {
	isRollout_Rule()
}

type Rollout_Segment struct {
	Segment *RolloutSegment `protobuf:"bytes,20,opt,name=segment,proto3,oneof"`
}

type Rollout_Threshold struct {
	Threshold *RolloutThreshold `protobuf:"bytes,21,opt,name=threshold,proto3,oneof"`
}

func (*Rollout_Segment) isRollout_Rule() {}

func (*Rollout_Threshold) isRollout_Rule() {}

type RolloutSegment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in flipt.proto.
	SegmentKey      string          `protobuf:"bytes,1,opt,name=segment_key,json=segmentKey,proto3" json:"segment_key,omitempty"`
	Value           bool            `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	SegmentKeys     []string        `protobuf:"bytes,3,rep,name=segment_keys,json=segmentKeys,proto3" json:"segment_keys,omitempty"`
	SegmentOperator SegmentOperator `protobuf:"varint,4,opt,name=segment_operator,json=segmentOperator,proto3,enum=flipt.SegmentOperator" json:"segment_operator,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RolloutSegment) Reset() {
	*x = RolloutSegment{}
	mi := &file_flipt_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolloutSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolloutSegment) ProtoMessage() {}

func (x *RolloutSegment) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolloutSegment.ProtoReflect.Descriptor instead.
func (*RolloutSegment) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{34}
}

// Deprecated: Marked as deprecated in flipt.proto.
func (x *RolloutSegment) GetSegmentKey() string {
	if x != nil {
		return x.SegmentKey
	}
	return ""
}

func (x *RolloutSegment) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *RolloutSegment) GetSegmentKeys() []string {
	if x != nil {
		return x.SegmentKeys
	}
	return nil
}

func (x *RolloutSegment) GetSegmentOperator() SegmentOperator {
	if x != nil {
		return x.SegmentOperator
	}
	return SegmentOperator_OR_SEGMENT_OPERATOR
}

type RolloutThreshold struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Percentage    float32                `protobuf:"fixed32,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Value         bool                   `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolloutThreshold) Reset() {
	*x = RolloutThreshold{}
	mi := &file_flipt_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolloutThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolloutThreshold) ProtoMessage() {}

func (x *RolloutThreshold) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolloutThreshold.ProtoReflect.Descriptor instead.
func (*RolloutThreshold) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{35}
}

func (x *RolloutThreshold) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *RolloutThreshold) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type RolloutList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rules         []*Rollout             `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolloutList) Reset() {
	*x = RolloutList{}
	mi := &file_flipt_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolloutList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolloutList) ProtoMessage() {}

func (x *RolloutList) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolloutList.ProtoReflect.Descriptor instead.
func (*RolloutList) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{36}
}

func (x *RolloutList) GetRules() []*Rollout {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *RolloutList) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *RolloutList) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ListRolloutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceKey  string                 `protobuf:"bytes,1,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	FlagKey       string                 `protobuf:"bytes,2,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	PageToken     string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Reference     string                 `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRolloutRequest) Reset() {
	*x = ListRolloutRequest{}
	mi := &file_flipt_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRolloutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolloutRequest) ProtoMessage() {}

func (x *ListRolloutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolloutRequest.ProtoReflect.Descriptor instead.
func (*ListRolloutRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{37}
}

func (x *ListRolloutRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *ListRolloutRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *ListRolloutRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRolloutRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListRolloutRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

type GetRolloutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,2,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	FlagKey       string                 `protobuf:"bytes,3,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	Reference     string                 `protobuf:"bytes,4,opt,name=reference,proto3" json:"reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRolloutRequest) Reset() {
	*x = GetRolloutRequest{}
	mi := &file_flipt_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRolloutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolloutRequest) ProtoMessage() {}

func (x *GetRolloutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolloutRequest.ProtoReflect.Descriptor instead.
func (*GetRolloutRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{38}
}

func (x *GetRolloutRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetRolloutRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *GetRolloutRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *GetRolloutRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

type CreateRolloutRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	NamespaceKey string                 `protobuf:"bytes,1,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	FlagKey      string                 `protobuf:"bytes,2,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	Rank         int32                  `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	Description  string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are valid to be assigned to Rule:
	//
	//	*CreateRolloutRequest_Segment
	//	*CreateRolloutRequest_Threshold
	Rule          isCreateRolloutRequest_Rule `protobuf_oneof:"rule"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRolloutRequest) Reset() {
	*x = CreateRolloutRequest{}
	mi := &file_flipt_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRolloutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRolloutRequest) ProtoMessage() {}

func (x *CreateRolloutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRolloutRequest.ProtoReflect.Descriptor instead.
func (*CreateRolloutRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{39}
}

func (x *CreateRolloutRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *CreateRolloutRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *CreateRolloutRequest) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *CreateRolloutRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateRolloutRequest) GetRule() isCreateRolloutRequest_Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *CreateRolloutRequest) GetSegment() *RolloutSegment {
	if x != nil {
		if x, ok := x.Rule.(*CreateRolloutRequest_Segment); ok {
			return x.Segment
		}
	}
	return nil
}

func (x *CreateRolloutRequest) GetThreshold() *RolloutThreshold {
	if x != nil {
		if x, ok := x.Rule.(*CreateRolloutRequest_Threshold); ok {
			return x.Threshold
		}
	}
	return nil
}

type isCreateRolloutRequest_Rule interface {
	isCreateRolloutRequest_Rule()
}

type CreateRolloutRequest_Segment struct {
	Segment *RolloutSegment `protobuf:"bytes,20,opt,name=segment,proto3,oneof"`
}

type CreateRolloutRequest_Threshold struct {
	Threshold *RolloutThreshold `protobuf:"bytes,21,opt,name=threshold,proto3,oneof"`
}

func (*CreateRolloutRequest_Segment) isCreateRolloutRequest_Rule() {}

func (*CreateRolloutRequest_Threshold) isCreateRolloutRequest_Rule() {}

type UpdateRolloutRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NamespaceKey string                 `protobuf:"bytes,2,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	FlagKey      string                 `protobuf:"bytes,3,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	Description  string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are valid to be assigned to Rule:
	//
	//	*UpdateRolloutRequest_Segment
	//	*UpdateRolloutRequest_Threshold
	Rule          isUpdateRolloutRequest_Rule `protobuf_oneof:"rule"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRolloutRequest) Reset() {
	*x = UpdateRolloutRequest{}
	mi := &file_flipt_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRolloutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRolloutRequest) ProtoMessage() {}

func (x *UpdateRolloutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRolloutRequest.ProtoReflect.Descriptor instead.
func (*UpdateRolloutRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateRolloutRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateRolloutRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *UpdateRolloutRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *UpdateRolloutRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateRolloutRequest) GetRule() isUpdateRolloutRequest_Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *UpdateRolloutRequest) GetSegment() *RolloutSegment {
	if x != nil {
		if x, ok := x.Rule.(*UpdateRolloutRequest_Segment); ok {
			return x.Segment
		}
	}
	return nil
}

func (x *UpdateRolloutRequest) GetThreshold() *RolloutThreshold {
	if x != nil {
		if x, ok := x.Rule.(*UpdateRolloutRequest_Threshold); ok {
			return x.Threshold
		}
	}
	return nil
}

type isUpdateRolloutRequest_Rule interface {
	isUpdateRolloutRequest_Rule()
}

type UpdateRolloutRequest_Segment struct {
	Segment *RolloutSegment `protobuf:"bytes,20,opt,name=segment,proto3,oneof"`
}

type UpdateRolloutRequest_Threshold struct {
	Threshold *RolloutThreshold `protobuf:"bytes,21,opt,name=threshold,proto3,oneof"`
}

func (*UpdateRolloutRequest_Segment) isUpdateRolloutRequest_Rule() {}

func (*UpdateRolloutRequest_Threshold) isUpdateRolloutRequest_Rule() {}

type DeleteRolloutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,2,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	FlagKey       string                 `protobuf:"bytes,3,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRolloutRequest) Reset() {
	*x = DeleteRolloutRequest{}
	mi := &file_flipt_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRolloutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRolloutRequest) ProtoMessage() {}

func (x *DeleteRolloutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRolloutRequest.ProtoReflect.Descriptor instead.
func (*DeleteRolloutRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteRolloutRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteRolloutRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *DeleteRolloutRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

type OrderRolloutsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlagKey       string                 `protobuf:"bytes,1,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,2,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	RolloutIds    []string               `protobuf:"bytes,3,rep,name=rollout_ids,json=rolloutIds,proto3" json:"rollout_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderRolloutsRequest) Reset() {
	*x = OrderRolloutsRequest{}
	mi := &file_flipt_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderRolloutsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRolloutsRequest) ProtoMessage() {}

func (x *OrderRolloutsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRolloutsRequest.ProtoReflect.Descriptor instead.
func (*OrderRolloutsRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{42}
}

func (x *OrderRolloutsRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *OrderRolloutsRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *OrderRolloutsRequest) GetRolloutIds() []string {
	if x != nil {
		return x.RolloutIds
	}
	return nil
}

type Rule struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagKey         string                 `protobuf:"bytes,2,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	SegmentKey      string                 `protobuf:"bytes,3,opt,name=segment_key,json=segmentKey,proto3" json:"segment_key,omitempty"`
	Distributions   []*Distribution        `protobuf:"bytes,4,rep,name=distributions,proto3" json:"distributions,omitempty"`
	Rank            int32                  `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	NamespaceKey    string                 `protobuf:"bytes,8,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	SegmentKeys     []string               `protobuf:"bytes,9,rep,name=segment_keys,json=segmentKeys,proto3" json:"segment_keys,omitempty"`
	SegmentOperator SegmentOperator        `protobuf:"varint,10,opt,name=segment_operator,json=segmentOperator,proto3,enum=flipt.SegmentOperator" json:"segment_operator,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Rule) Reset() {
	*x = Rule{}
	mi := &file_flipt_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{43}
}

func (x *Rule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Rule) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *Rule) GetSegmentKey() string {
	if x != nil {
		return x.SegmentKey
	}
	return ""
}

func (x *Rule) GetDistributions() []*Distribution {
	if x != nil {
		return x.Distributions
	}
	return nil
}

func (x *Rule) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Rule) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Rule) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Rule) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *Rule) GetSegmentKeys() []string {
	if x != nil {
		return x.SegmentKeys
	}
	return nil
}

func (x *Rule) GetSegmentOperator() SegmentOperator {
	if x != nil {
		return x.SegmentOperator
	}
	return SegmentOperator_OR_SEGMENT_OPERATOR
}

type RuleList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rules         []*Rule                `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleList) Reset() {
	*x = RuleList{}
	mi := &file_flipt_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleList) ProtoMessage() {}

func (x *RuleList) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleList.ProtoReflect.Descriptor instead.
func (*RuleList) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{44}
}

func (x *RuleList) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *RuleList) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *RuleList) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ListRuleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Limit int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Deprecated: Marked as deprecated in flipt.proto.
	Offset        int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	FlagKey       string `protobuf:"bytes,3,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	PageToken     string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	NamespaceKey  string `protobuf:"bytes,5,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	Reference     string `protobuf:"bytes,6,opt,name=reference,proto3" json:"reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRuleRequest) Reset() {
	*x = ListRuleRequest{}
	mi := &file_flipt_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuleRequest) ProtoMessage() {}

func (x *ListRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuleRequest.ProtoReflect.Descriptor instead.
func (*ListRuleRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{45}
}

func (x *ListRuleRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Deprecated: Marked as deprecated in flipt.proto.
func (x *ListRuleRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListRuleRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *ListRuleRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListRuleRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *ListRuleRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

type GetRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagKey       string                 `protobuf:"bytes,2,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,3,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	Reference     string                 `protobuf:"bytes,4,opt,name=reference,proto3" json:"reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRuleRequest) Reset() {
	*x = GetRuleRequest{}
	mi := &file_flipt_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRuleRequest) ProtoMessage() {}

func (x *GetRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRuleRequest.ProtoReflect.Descriptor instead.
func (*GetRuleRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{46}
}

func (x *GetRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetRuleRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *GetRuleRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *GetRuleRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

type CreateRuleRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	FlagKey string                 `protobuf:"bytes,1,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	// Deprecated: Marked as deprecated in flipt.proto.
	SegmentKey      string          `protobuf:"bytes,2,opt,name=segment_key,json=segmentKey,proto3" json:"segment_key,omitempty"`
	Rank            int32           `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	NamespaceKey    string          `protobuf:"bytes,4,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	SegmentKeys     []string        `protobuf:"bytes,5,rep,name=segment_keys,json=segmentKeys,proto3" json:"segment_keys,omitempty"`
	SegmentOperator SegmentOperator `protobuf:"varint,6,opt,name=segment_operator,json=segmentOperator,proto3,enum=flipt.SegmentOperator" json:"segment_operator,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateRuleRequest) Reset() {
	*x = CreateRuleRequest{}
	mi := &file_flipt_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleRequest) ProtoMessage() {}

func (x *CreateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateRuleRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{47}
}

func (x *CreateRuleRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

// Deprecated: Marked as deprecated in flipt.proto.
func (x *CreateRuleRequest) GetSegmentKey() string {
	if x != nil {
		return x.SegmentKey
	}
	return ""
}

func (x *CreateRuleRequest) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *CreateRuleRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *CreateRuleRequest) GetSegmentKeys() []string {
	if x != nil {
		return x.SegmentKeys
	}
	return nil
}

func (x *CreateRuleRequest) GetSegmentOperator() SegmentOperator {
	if x != nil {
		return x.SegmentOperator
	}
	return SegmentOperator_OR_SEGMENT_OPERATOR
}

type UpdateRuleRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Id      string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagKey string                 `protobuf:"bytes,2,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	// Deprecated: Marked as deprecated in flipt.proto.
	SegmentKey      string          `protobuf:"bytes,3,opt,name=segment_key,json=segmentKey,proto3" json:"segment_key,omitempty"`
	NamespaceKey    string          `protobuf:"bytes,4,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	SegmentKeys     []string        `protobuf:"bytes,5,rep,name=segment_keys,json=segmentKeys,proto3" json:"segment_keys,omitempty"`
	SegmentOperator SegmentOperator `protobuf:"varint,6,opt,name=segment_operator,json=segmentOperator,proto3,enum=flipt.SegmentOperator" json:"segment_operator,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateRuleRequest) Reset() {
	*x = UpdateRuleRequest{}
	mi := &file_flipt_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuleRequest) ProtoMessage() {}

func (x *UpdateRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRuleRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateRuleRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

// Deprecated: Marked as deprecated in flipt.proto.
func (x *UpdateRuleRequest) GetSegmentKey() string {
	if x != nil {
		return x.SegmentKey
	}
	return ""
}

func (x *UpdateRuleRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

func (x *UpdateRuleRequest) GetSegmentKeys() []string {
	if x != nil {
		return x.SegmentKeys
	}
	return nil
}

func (x *UpdateRuleRequest) GetSegmentOperator() SegmentOperator {
	if x != nil {
		return x.SegmentOperator
	}
	return SegmentOperator_OR_SEGMENT_OPERATOR
}

type DeleteRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagKey       string                 `protobuf:"bytes,2,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,3,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRuleRequest) Reset() {
	*x = DeleteRuleRequest{}
	mi := &file_flipt_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleRequest) ProtoMessage() {}

func (x *DeleteRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRuleRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{49}
}

func (x *DeleteRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteRuleRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *DeleteRuleRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type OrderRulesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlagKey       string                 `protobuf:"bytes,1,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	RuleIds       []string               `protobuf:"bytes,2,rep,name=rule_ids,json=ruleIds,proto3" json:"rule_ids,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,3,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderRulesRequest) Reset() {
	*x = OrderRulesRequest{}
	mi := &file_flipt_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRulesRequest) ProtoMessage() {}

func (x *OrderRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRulesRequest.ProtoReflect.Descriptor instead.
func (*OrderRulesRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{50}
}

func (x *OrderRulesRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *OrderRulesRequest) GetRuleIds() []string {
	if x != nil {
		return x.RuleIds
	}
	return nil
}

func (x *OrderRulesRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type Distribution struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RuleId        string                 `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	VariantId     string                 `protobuf:"bytes,3,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Rollout       float32                `protobuf:"fixed32,4,opt,name=rollout,proto3" json:"rollout,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Distribution) Reset() {
	*x = Distribution{}
	mi := &file_flipt_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Distribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Distribution) ProtoMessage() {}

func (x *Distribution) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Distribution.ProtoReflect.Descriptor instead.
func (*Distribution) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{51}
}

func (x *Distribution) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Distribution) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *Distribution) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

func (x *Distribution) GetRollout() float32 {
	if x != nil {
		return x.Rollout
	}
	return 0
}

func (x *Distribution) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Distribution) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateDistributionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlagKey       string                 `protobuf:"bytes,1,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	RuleId        string                 `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	VariantId     string                 `protobuf:"bytes,3,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Rollout       float32                `protobuf:"fixed32,4,opt,name=rollout,proto3" json:"rollout,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,5,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDistributionRequest) Reset() {
	*x = CreateDistributionRequest{}
	mi := &file_flipt_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDistributionRequest) ProtoMessage() {}

func (x *CreateDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDistributionRequest.ProtoReflect.Descriptor instead.
func (*CreateDistributionRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{52}
}

func (x *CreateDistributionRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *CreateDistributionRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *CreateDistributionRequest) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

func (x *CreateDistributionRequest) GetRollout() float32 {
	if x != nil {
		return x.Rollout
	}
	return 0
}

func (x *CreateDistributionRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type UpdateDistributionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagKey       string                 `protobuf:"bytes,2,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	RuleId        string                 `protobuf:"bytes,3,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	VariantId     string                 `protobuf:"bytes,4,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Rollout       float32                `protobuf:"fixed32,5,opt,name=rollout,proto3" json:"rollout,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,6,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDistributionRequest) Reset() {
	*x = UpdateDistributionRequest{}
	mi := &file_flipt_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDistributionRequest) ProtoMessage() {}

func (x *UpdateDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDistributionRequest.ProtoReflect.Descriptor instead.
func (*UpdateDistributionRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{53}
}

func (x *UpdateDistributionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDistributionRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *UpdateDistributionRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *UpdateDistributionRequest) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

func (x *UpdateDistributionRequest) GetRollout() float32 {
	if x != nil {
		return x.Rollout
	}
	return 0
}

func (x *UpdateDistributionRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

type DeleteDistributionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagKey       string                 `protobuf:"bytes,2,opt,name=flag_key,json=flagKey,proto3" json:"flag_key,omitempty"`
	RuleId        string                 `protobuf:"bytes,3,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	VariantId     string                 `protobuf:"bytes,4,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	NamespaceKey  string                 `protobuf:"bytes,5,opt,name=namespace_key,json=namespaceKey,proto3" json:"namespace_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDistributionRequest) Reset() {
	*x = DeleteDistributionRequest{}
	mi := &file_flipt_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDistributionRequest) ProtoMessage() {}

func (x *DeleteDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flipt_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDistributionRequest.ProtoReflect.Descriptor instead.
func (*DeleteDistributionRequest) Descriptor() ([]byte, []int) {
	return file_flipt_proto_rawDescGZIP(), []int{54}
}

func (x *DeleteDistributionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteDistributionRequest) GetFlagKey() string {
	if x != nil {
		return x.FlagKey
	}
	return ""
}

func (x *DeleteDistributionRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *DeleteDistributionRequest) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

func (x *DeleteDistributionRequest) GetNamespaceKey() string {
	if x != nil {
		return x.NamespaceKey
	}
	return ""
}

var File_flipt_proto protoreflect.FileDescriptor

const file_flipt_proto_rawDesc = "" +
	"\n" +
	"\vflipt.proto\x12\x05flipt\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a$gnostic/openapi/v3/annotations.proto\x1a\x15options/options.proto\"\x8c\x02\n" +
	"\x11EvaluationRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x19\n" +
	"\bflag_key\x18\x02 \x01(\tR\aflagKey\x12\x1b\n" +
	"\tentity_id\x18\x03 \x01(\tR\bentityId\x12?\n" +
	"\acontext\x18\x04 \x03(\v2%.flipt.EvaluationRequest.ContextEntryR\acontext\x12#\n" +
	"\rnamespace_key\x18\x05 \x01(\tR\fnamespaceKey\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbe\x01\n" +
	"\x16BatchEvaluationRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x124\n" +
	"\brequests\x18\x02 \x03(\v2\x18.flipt.EvaluationRequestR\brequests\x12*\n" +
	"\x11exclude_not_found\x18\x03 \x01(\bR\x0fexcludeNotFound\x12#\n" +
	"\rnamespace_key\x18\x04 \x01(\tR\fnamespaceKey\"\xa9\x01\n" +
	"\x17BatchEvaluationResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x127\n" +
	"\tresponses\x18\x02 \x03(\v2\x19.flipt.EvaluationResponseR\tresponses\x126\n" +
	"\x17request_duration_millis\x18\x03 \x01(\x01R\x15requestDurationMillis\"\xe2\x04\n" +
	"\x12EvaluationResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x1b\n" +
	"\tentity_id\x18\x02 \x01(\tR\bentityId\x12V\n" +
	"\x0frequest_context\x18\x03 \x03(\v2-.flipt.EvaluationResponse.RequestContextEntryR\x0erequestContext\x12\x14\n" +
	"\x05match\x18\x04 \x01(\bR\x05match\x12\x19\n" +
	"\bflag_key\x18\x05 \x01(\tR\aflagKey\x12#\n" +
	"\vsegment_key\x18\x06 \x01(\tB\x02\x18\x01R\n" +
	"segmentKey\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x14\n" +
	"\x05value\x18\b \x01(\tR\x05value\x126\n" +
	"\x17request_duration_millis\x18\t \x01(\x01R\x15requestDurationMillis\x12\x1e\n" +
	"\n" +
	"attachment\x18\n" +
	" \x01(\tR\n" +
	"attachment\x12/\n" +
	"\x06reason\x18\v \x01(\x0e2\x17.flipt.EvaluationReasonR\x06reason\x12#\n" +
	"\rnamespace_key\x18\f \x01(\tR\fnamespaceKey\x12!\n" +
	"\fsegment_keys\x18\r \x03(\tR\vsegmentKeys\x1aA\n" +
	"\x13RequestContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe7\x01\n" +
	"\tNamespace\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1c\n" +
	"\tprotected\x18\x04 \x01(\bR\tprotected\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x8a\x01\n" +
	"\rNamespaceList\x120\n" +
	"\n" +
	"namespaces\x18\x01 \x03(\v2\x10.flipt.NamespaceR\n" +
	"namespaces\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"E\n" +
	"\x13GetNamespaceRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1c\n" +
	"\treference\x18\x02 \x01(\tR\treference\"\x85\x01\n" +
	"\x14ListNamespaceRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x1a\n" +
	"\x06offset\x18\x02 \x01(\x05B\x02\x18\x01R\x06offset\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12\x1c\n" +
	"\treference\x18\x04 \x01(\tR\treference\"j\n" +
	"\x16CreateNamespaceRequest\x12\x15\n" +
	"\x03key\x18\x01 \x01(\tB\x03\xe0A\x02R\x03key\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tB\x03\xe0A\x02R\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"e\n" +
	"\x16UpdateNamespaceRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tB\x03\xe0A\x02R\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"@\n" +
	"\x16DeleteNamespaceRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"\xed\x03\n" +
	"\x04Flag\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12*\n" +
	"\bvariants\x18\a \x03(\v2\x0e.flipt.VariantR\bvariants\x12#\n" +
	"\rnamespace_key\x18\b \x01(\tR\fnamespaceKey\x12#\n" +
	"\x04type\x18\t \x01(\x0e2\x0f.flipt.FlagTypeR\x04type\x12<\n" +
	"\x0fdefault_variant\x18\n" +
	" \x01(\v2\x0e.flipt.VariantH\x00R\x0edefaultVariant\x88\x01\x01\x128\n" +
	"\bmetadata\x18\v \x01(\v2\x17.google.protobuf.StructH\x01R\bmetadata\x88\x01\x01B\x12\n" +
	"\x10_default_variantB\v\n" +
	"\t_metadata\"v\n" +
	"\bFlagList\x12!\n" +
	"\x05flags\x18\x01 \x03(\v2\v.flipt.FlagR\x05flags\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"e\n" +
	"\x0eGetFlagRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12#\n" +
	"\rnamespace_key\x18\x02 \x01(\tR\fnamespaceKey\x12\x1c\n" +
	"\treference\x18\x03 \x01(\tR\treference\"\xa5\x01\n" +
	"\x0fListFlagRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x1a\n" +
	"\x06offset\x18\x02 \x01(\x05B\x02\x18\x01R\x06offset\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12#\n" +
	"\rnamespace_key\x18\x04 \x01(\tR\fnamespaceKey\x12\x1c\n" +
	"\treference\x18\x05 \x01(\tR\treference\"\x95\x02\n" +
	"\x11CreateFlagRequest\x12\x15\n" +
	"\x03key\x18\x01 \x01(\tB\x03\xe0A\x02R\x03key\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tB\x03\xe0A\x02R\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled\x12#\n" +
	"\rnamespace_key\x18\x05 \x01(\tR\fnamespaceKey\x12(\n" +
	"\x04type\x18\x06 \x01(\x0e2\x0f.flipt.FlagTypeB\x03\xe0A\x02R\x04type\x128\n" +
	"\bmetadata\x18\a \x01(\v2\x17.google.protobuf.StructH\x00R\bmetadata\x88\x01\x01B\v\n" +
	"\t_metadata\"\x94\x02\n" +
	"\x11UpdateFlagRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tB\x03\xe0A\x02R\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled\x12#\n" +
	"\rnamespace_key\x18\x05 \x01(\tR\fnamespaceKey\x12,\n" +
	"\x12default_variant_id\x18\x06 \x01(\tR\x10defaultVariantId\x128\n" +
	"\bmetadata\x18\a \x01(\v2\x17.google.protobuf.StructH\x00R\bmetadata\x88\x01\x01B\v\n" +
	"\t_metadata\"J\n" +
	"\x11DeleteFlagRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12#\n" +
	"\rnamespace_key\x18\x02 \x01(\tR\fnamespaceKey\"\xb7\x02\n" +
	"\aVariant\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bflag_key\x18\x02 \x01(\tR\aflagKey\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1e\n" +
	"\n" +
	"attachment\x18\b \x01(\tR\n" +
	"attachment\x12#\n" +
	"\rnamespace_key\x18\t \x01(\tR\fnamespaceKey\"\xc3\x01\n" +
	"\x14CreateVariantRequest\x12\x19\n" +
	"\bflag_key\x18\x01 \x01(\tR\aflagKey\x12\x15\n" +
	"\x03key\x18\x02 \x01(\tB\x03\xe0A\x02R\x03key\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"attachment\x18\x05 \x01(\tR\n" +
	"attachment\x12#\n" +
	"\rnamespace_key\x18\x06 \x01(\tR\fnamespaceKey\"\xd3\x01\n" +
	"\x14UpdateVariantRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bflag_key\x18\x02 \x01(\tR\aflagKey\x12\x15\n" +
	"\x03key\x18\x03 \x01(\tB\x03\xe0A\x02R\x03key\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"attachment\x18\x06 \x01(\tR\n" +
	"attachment\x12#\n" +
	"\rnamespace_key\x18\a \x01(\tR\fnamespaceKey\"f\n" +
	"\x14DeleteVariantRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bflag_key\x18\x02 \x01(\tR\aflagKey\x12#\n" +
	"\rnamespace_key\x18\x03 \x01(\tR\fnamespaceKey\"\xd2\x02\n" +
	"\aSegment\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x123\n" +
	"\vconstraints\x18\x06 \x03(\v2\x11.flipt.ConstraintR\vconstraints\x12/\n" +
	"\n" +
	"match_type\x18\a \x01(\x0e2\x10.flipt.MatchTypeR\tmatchType\x12#\n" +
	"\rnamespace_key\x18\b \x01(\tR\fnamespaceKey\"\x82\x01\n" +
	"\vSegmentList\x12*\n" +
	"\bsegments\x18\x01 \x03(\v2\x0e.flipt.SegmentR\bsegments\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"h\n" +
	"\x11GetSegmentRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12#\n" +
	"\rnamespace_key\x18\x02 \x01(\tR\fnamespaceKey\x12\x1c\n" +
	"\treference\x18\x03 \x01(\tR\treference\"\xa8\x01\n" +
	"\x12ListSegmentRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x1a\n" +
	"\x06offset\x18\x02 \x01(\x05B\x02\x18\x01R\x06offset\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12#\n" +
	"\rnamespace_key\x18\x04 \x01(\tR\fnamespaceKey\x12\x1c\n" +
	"\treference\x18\x05 \x01(\tR\treference\"\xc3\x01\n" +
	"\x14CreateSegmentRequest\x12\x15\n" +
	"\x03key\x18\x01 \x01(\tB\x03\xe0A\x02R\x03key\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tB\x03\xe0A\x02R\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x124\n" +
	"\n" +
	"match_type\x18\x04 \x01(\x0e2\x10.flipt.MatchTypeB\x03\xe0A\x02R\tmatchType\x12#\n" +
	"\rnamespace_key\x18\x05 \x01(\tR\fnamespaceKey\"\xbe\x01\n" +
	"\x14UpdateSegmentRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tB\x03\xe0A\x02R\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x124\n" +
	"\n" +
	"match_type\x18\x04 \x01(\x0e2\x10.flipt.MatchTypeB\x03\xe0A\x02R\tmatchType\x12#\n" +
	"\rnamespace_key\x18\x05 \x01(\tR\fnamespaceKey\"M\n" +
	"\x14DeleteSegmentRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12#\n" +
	"\rnamespace_key\x18\x02 \x01(\tR\fnamespaceKey\"\xf3\x02\n" +
	"\n" +
	"Constraint\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vsegment_key\x18\x02 \x01(\tR\n" +
	"segmentKey\x12)\n" +
	"\x04type\x18\x03 \x01(\x0e2\x15.flipt.ComparisonTypeR\x04type\x12\x1a\n" +
	"\bproperty\x18\x04 \x01(\tR\bproperty\x12\x1a\n" +
	"\boperator\x18\x05 \x01(\tR\boperator\x12\x14\n" +
	"\x05value\x18\x06 \x01(\tR\x05value\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12#\n" +
	"\rnamespace_key\x18\t \x01(\tR\fnamespaceKey\x12 \n" +
	"\vdescription\x18\n" +
	" \x01(\tR\vdescription\"\x89\x02\n" +
	"\x17CreateConstraintRequest\x12\x1f\n" +
	"\vsegment_key\x18\x01 \x01(\tR\n" +
	"segmentKey\x12.\n" +
	"\x04type\x18\x02 \x01(\x0e2\x15.flipt.ComparisonTypeB\x03\xe0A\x02R\x04type\x12\x1f\n" +
	"\bproperty\x18\x03 \x01(\tB\x03\xe0A\x02R\bproperty\x12\x1f\n" +
	"\boperator\x18\x04 \x01(\tB\x03\xe0A\x02R\boperator\x12\x14\n" +
	"\x05value\x18\x05 \x01(\tR\x05value\x12#\n" +
	"\rnamespace_key\x18\x06 \x01(\tR\fnamespaceKey\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\"\x99\x02\n" +
	"\x17UpdateConstraintRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vsegment_key\x18\x02 \x01(\tR\n" +
	"segmentKey\x12.\n" +
	"\x04type\x18\x03 \x01(\x0e2\x15.flipt.ComparisonTypeB\x03\xe0A\x02R\x04type\x12\x1f\n" +
	"\bproperty\x18\x04 \x01(\tB\x03\xe0A\x02R\bproperty\x12\x1f\n" +
	"\boperator\x18\x05 \x01(\tB\x03\xe0A\x02R\boperator\x12\x14\n" +
	"\x05value\x18\x06 \x01(\tR\x05value\x12#\n" +
	"\rnamespace_key\x18\a \x01(\tR\fnamespaceKey\x12 \n" +
	"\vdescription\x18\b \x01(\tR\vdescription\"o\n" +
	"\x17DeleteConstraintRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vsegment_key\x18\x02 \x01(\tR\n" +
	"segmentKey\x12#\n" +
	"\rnamespace_key\x18\x03 \x01(\tR\fnamespaceKey\"\xa1\x03\n" +
	"\aRollout\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12#\n" +
	"\rnamespace_key\x18\x02 \x01(\tR\fnamespaceKey\x12\x19\n" +
	"\bflag_key\x18\x03 \x01(\tR\aflagKey\x12&\n" +
	"\x04type\x18\x04 \x01(\x0e2\x12.flipt.RolloutTypeR\x04type\x12\x12\n" +
	"\x04rank\x18\x05 \x01(\x05R\x04rank\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x121\n" +
	"\asegment\x18\x14 \x01(\v2\x15.flipt.RolloutSegmentH\x00R\asegment\x127\n" +
	"\tthreshold\x18\x15 \x01(\v2\x17.flipt.RolloutThresholdH\x00R\tthresholdB\x06\n" +
	"\x04rule\"\xb1\x01\n" +
	"\x0eRolloutSegment\x12#\n" +
	"\vsegment_key\x18\x01 \x01(\tB\x02\x18\x01R\n" +
	"segmentKey\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value\x12!\n" +
	"\fsegment_keys\x18\x03 \x03(\tR\vsegmentKeys\x12A\n" +
	"\x10segment_operator\x18\x04 \x01(\x0e2\x16.flipt.SegmentOperatorR\x0fsegmentOperator\"H\n" +
	"\x10RolloutThreshold\x12\x1e\n" +
	"\n" +
	"percentage\x18\x01 \x01(\x02R\n" +
	"percentage\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value\"|\n" +
	"\vRolloutList\x12$\n" +
	"\x05rules\x18\x01 \x03(\v2\x0e.flipt.RolloutR\x05rules\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\xa7\x01\n" +
	"\x12ListRolloutRequest\x12#\n" +
	"\rnamespace_key\x18\x01 \x01(\tR\fnamespaceKey\x12\x19\n" +
	"\bflag_key\x18\x02 \x01(\tR\aflagKey\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\x12\x1c\n" +
	"\treference\x18\x05 \x01(\tR\treference\"\x81\x01\n" +
	"\x11GetRolloutRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12#\n" +
	"\rnamespace_key\x18\x02 \x01(\tR\fnamespaceKey\x12\x19\n" +
	"\bflag_key\x18\x03 \x01(\tR\aflagKey\x12\x1c\n" +
	"\treference\x18\x04 \x01(\tR\treference\"\x85\x02\n" +
	"\x14CreateRolloutRequest\x12#\n" +
	"\rnamespace_key\x18\x01 \x01(\tR\fnamespaceKey\x12\x19\n" +
	"\bflag_key\x18\x02 \x01(\tR\aflagKey\x12\x17\n" +
	"\x04rank\x18\x03 \x01(\x05B\x03\xe0A\x02R\x04rank\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x121\n" +
	"\asegment\x18\x14 \x01(\v2\x15.flipt.RolloutSegmentH\x00R\asegment\x127\n" +
	"\tthreshold\x18\x15 \x01(\v2\x17.flipt.RolloutThresholdH\x00R\tthresholdB\x06\n" +
	"\x04rule\"\xfc\x01\n" +
	"\x14UpdateRolloutRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12#\n" +
	"\rnamespace_key\x18\x02 \x01(\tR\fnamespaceKey\x12\x19\n" +
	"\bflag_key\x18\x03 \x01(\tR\aflagKey\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x121\n" +
	"\asegment\x18\x14 \x01(\v2\x15.flipt.RolloutSegmentH\x00R\asegment\x127\n" +
	"\tthreshold\x18\x15 \x01(\v2\x17.flipt.RolloutThresholdH\x00R\tthresholdB\x06\n" +
	"\x04rule\"f\n" +
	"\x14DeleteRolloutRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12#\n" +
	"\rnamespace_key\x18\x02 \x01(\tR\fnamespaceKey\x12\x19\n" +
	"\bflag_key\x18\x03 \x01(\tR\aflagKey\"|\n" +
	"\x14OrderRolloutsRequest\x12\x19\n" +
	"\bflag_key\x18\x01 \x01(\tR\aflagKey\x12#\n" +
	"\rnamespace_key\x18\x02 \x01(\tR\fnamespaceKey\x12$\n" +
	"\vrollout_ids\x18\x03 \x03(\tB\x03\xe0A\x02R\n" +
	"rolloutIds\"\xa2\x03\n" +
	"\x04Rule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bflag_key\x18\x02 \x01(\tR\aflagKey\x12\x1f\n" +
	"\vsegment_key\x18\x03 \x01(\tR\n" +
	"segmentKey\x129\n" +
	"\rdistributions\x18\x04 \x03(\v2\x13.flipt.DistributionR\rdistributions\x12\x12\n" +
	"\x04rank\x18\x05 \x01(\x05R\x04rank\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12#\n" +
	"\rnamespace_key\x18\b \x01(\tR\fnamespaceKey\x12!\n" +
	"\fsegment_keys\x18\t \x03(\tR\vsegmentKeys\x12A\n" +
	"\x10segment_operator\x18\n" +
	" \x01(\x0e2\x16.flipt.SegmentOperatorR\x0fsegmentOperator\"v\n" +
	"\bRuleList\x12!\n" +
	"\x05rules\x18\x01 \x03(\v2\v.flipt.RuleR\x05rules\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\xc0\x01\n" +
	"\x0fListRuleRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x1a\n" +
	"\x06offset\x18\x02 \x01(\x05B\x02\x18\x01R\x06offset\x12\x19\n" +
	"\bflag_key\x18\x03 \x01(\tR\aflagKey\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\x12#\n" +
	"\rnamespace_key\x18\x05 \x01(\tR\fnamespaceKey\x12\x1c\n" +
	"\treference\x18\x06 \x01(\tR\treference\"~\n" +
	"\x0eGetRuleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bflag_key\x18\x02 \x01(\tR\aflagKey\x12#\n" +
	"\rnamespace_key\x18\x03 \x01(\tR\fnamespaceKey\x12\x1c\n" +
	"\treference\x18\x04 \x01(\tR\treference\"\xf7\x01\n" +
	"\x11CreateRuleRequest\x12\x19\n" +
	"\bflag_key\x18\x01 \x01(\tR\aflagKey\x12#\n" +
	"\vsegment_key\x18\x02 \x01(\tB\x02\x18\x01R\n" +
	"segmentKey\x12\x17\n" +
	"\x04rank\x18\x03 \x01(\x05B\x03\xe0A\x02R\x04rank\x12#\n" +
	"\rnamespace_key\x18\x04 \x01(\tR\fnamespaceKey\x12!\n" +
	"\fsegment_keys\x18\x05 \x03(\tR\vsegmentKeys\x12A\n" +
	"\x10segment_operator\x18\x06 \x01(\x0e2\x16.flipt.SegmentOperatorR\x0fsegmentOperator\"\xee\x01\n" +
	"\x11UpdateRuleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bflag_key\x18\x02 \x01(\tR\aflagKey\x12#\n" +
	"\vsegment_key\x18\x03 \x01(\tB\x02\x18\x01R\n" +
	"segmentKey\x12#\n" +
	"\rnamespace_key\x18\x04 \x01(\tR\fnamespaceKey\x12!\n" +
	"\fsegment_keys\x18\x05 \x03(\tR\vsegmentKeys\x12A\n" +
	"\x10segment_operator\x18\x06 \x01(\x0e2\x16.flipt.SegmentOperatorR\x0fsegmentOperator\"c\n" +
	"\x11DeleteRuleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bflag_key\x18\x02 \x01(\tR\aflagKey\x12#\n" +
	"\rnamespace_key\x18\x03 \x01(\tR\fnamespaceKey\"s\n" +
	"\x11OrderRulesRequest\x12\x19\n" +
	"\bflag_key\x18\x01 \x01(\tR\aflagKey\x12\x1e\n" +
	"\brule_ids\x18\x02 \x03(\tB\x03\xe0A\x02R\aruleIds\x12#\n" +
	"\rnamespace_key\x18\x03 \x01(\tR\fnamespaceKey\"\xe6\x01\n" +
	"\fDistribution\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\arule_id\x18\x02 \x01(\tR\x06ruleId\x12\x1d\n" +
	"\n" +
	"variant_id\x18\x03 \x01(\tR\tvariantId\x12\x18\n" +
	"\arollout\x18\x04 \x01(\x02R\arollout\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xb7\x01\n" +
	"\x19CreateDistributionRequest\x12\x19\n" +
	"\bflag_key\x18\x01 \x01(\tR\aflagKey\x12\x17\n" +
	"\arule_id\x18\x02 \x01(\tR\x06ruleId\x12\"\n" +
	"\n" +
	"variant_id\x18\x03 \x01(\tB\x03\xe0A\x02R\tvariantId\x12\x1d\n" +
	"\arollout\x18\x04 \x01(\x02B\x03\xe0A\x02R\arollout\x12#\n" +
	"\rnamespace_key\x18\x05 \x01(\tR\fnamespaceKey\"\xc7\x01\n" +
	"\x19UpdateDistributionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bflag_key\x18\x02 \x01(\tR\aflagKey\x12\x17\n" +
	"\arule_id\x18\x03 \x01(\tR\x06ruleId\x12\"\n" +
	"\n" +
	"variant_id\x18\x04 \x01(\tB\x03\xe0A\x02R\tvariantId\x12\x1d\n" +
	"\arollout\x18\x05 \x01(\x02B\x03\xe0A\x02R\arollout\x12#\n" +
	"\rnamespace_key\x18\x06 \x01(\tR\fnamespaceKey\"\xa3\x01\n" +
	"\x19DeleteDistributionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bflag_key\x18\x02 \x01(\tR\aflagKey\x12\x17\n" +
	"\arule_id\x18\x03 \x01(\tR\x06ruleId\x12\x1d\n" +
	"\n" +
	"variant_id\x18\x04 \x01(\tR\tvariantId\x12#\n" +
	"\rnamespace_key\x18\x05 \x01(\tR\fnamespaceKey*\xd5\x01\n" +
	"\x10EvaluationReason\x12\x1d\n" +
	"\x19UNKNOWN_EVALUATION_REASON\x10\x00\x12#\n" +
	"\x1fFLAG_DISABLED_EVALUATION_REASON\x10\x01\x12$\n" +
	" FLAG_NOT_FOUND_EVALUATION_REASON\x10\x02\x12\x1b\n" +
	"\x17MATCH_EVALUATION_REASON\x10\x03\x12\x1b\n" +
	"\x17ERROR_EVALUATION_REASON\x10\x04\x12\x1d\n" +
	"\x19DEFAULT_EVALUATION_REASON\x10\x05*8\n" +
	"\bFlagType\x12\x15\n" +
	"\x11VARIANT_FLAG_TYPE\x10\x00\x12\x15\n" +
	"\x11BOOLEAN_FLAG_TYPE\x10\x01*3\n" +
	"\tMatchType\x12\x12\n" +
	"\x0eALL_MATCH_TYPE\x10\x00\x12\x12\n" +
	"\x0eANY_MATCH_TYPE\x10\x01*\xbf\x01\n" +
	"\x0eComparisonType\x12\x1b\n" +
	"\x17UNKNOWN_COMPARISON_TYPE\x10\x00\x12\x1a\n" +
	"\x16STRING_COMPARISON_TYPE\x10\x01\x12\x1a\n" +
	"\x16NUMBER_COMPARISON_TYPE\x10\x02\x12\x1b\n" +
	"\x17BOOLEAN_COMPARISON_TYPE\x10\x03\x12\x1c\n" +
	"\x18DATETIME_COMPARISON_TYPE\x10\x04\x12\x1d\n" +
	"\x19ENTITY_ID_COMPARISON_TYPE\x10\x05*]\n" +
	"\vRolloutType\x12\x18\n" +
	"\x14UNKNOWN_ROLLOUT_TYPE\x10\x00\x12\x18\n" +
	"\x14SEGMENT_ROLLOUT_TYPE\x10\x01\x12\x1a\n" +
	"\x16THRESHOLD_ROLLOUT_TYPE\x10\x02*D\n" +
	"\x0fSegmentOperator\x12\x17\n" +
	"\x13OR_SEGMENT_OPERATOR\x10\x00\x12\x18\n" +
	"\x14AND_SEGMENT_OPERATOR\x10\x012\x908\n" +
	"\x05Flipt\x12D\n" +
	"\bEvaluate\x12\x18.flipt.EvaluationRequest\x1a\x19.flipt.EvaluationResponse\"\x03\x88\x02\x01\x12S\n" +
	"\rBatchEvaluate\x12\x1d.flipt.BatchEvaluationRequest\x1a\x1e.flipt.BatchEvaluationResponse\"\x03\x88\x02\x01\x12\x98\x01\n" +
	"\fGetNamespace\x12\x1a.flipt.GetNamespaceRequest\x1a\x10.flipt.Namespace\"Z\xbaG!\n" +
	"\x11NamespacesService*\fgetNamespace\x8a\xb3\x97\x8b\x01\x10\n" +
	"\x0e\n" +
	"\x03key\x12\adefault\x82\xd3\xe4\x93\x02\x1a\x12\x18/api/v1/namespaces/{key}\x12\x85\x01\n" +
	"\x0eListNamespaces\x12\x1b.flipt.ListNamespaceRequest\x1a\x14.flipt.NamespaceList\"@\xbaG#\n" +
	"\x11NamespacesService*\x0elistNamespaces\x82\xd3\xe4\x93\x02\x14\x12\x12/api/v1/namespaces\x12\x88\x01\n" +
	"\x0fCreateNamespace\x12\x1d.flipt.CreateNamespaceRequest\x1a\x10.flipt.Namespace\"D\xbaG$\n" +
	"\x11NamespacesService*\x0fcreateNamespace\x82\xd3\xe4\x93\x02\x17:\x01*\"\x12/api/v1/namespaces\x12\xa4\x01\n" +
	"\x0fUpdateNamespace\x12\x1d.flipt.UpdateNamespaceRequest\x1a\x10.flipt.Namespace\"`\xbaG$\n" +
	"\x11NamespacesService*\x0fupdateNamespace\x8a\xb3\x97\x8b\x01\x10\n" +
	"\x0e\n" +
	"\x03key\x12\adefault\x82\xd3\xe4\x93\x02\x1d:\x01*\x1a\x18/api/v1/namespaces/{key}\x12\xa7\x01\n" +
	"\x0fDeleteNamespace\x12\x1d.flipt.DeleteNamespaceRequest\x1a\x16.google.protobuf.Empty\"]\xbaG$\n" +
	"\x11NamespacesService*\x0fdeleteNamespace\x8a\xb3\x97\x8b\x01\x10\n" +
	"\x0e\n" +
	"\x03key\x12\adefault\x82\xd3\xe4\x93\x02\x1a*\x18/api/v1/namespaces/{key}\x12\x9f\x01\n" +
	"\aGetFlag\x12\x15.flipt.GetFlagRequest\x1a\v.flipt.Flag\"p\xbaG\x17\n" +
	"\fFlagsService*\agetFlag\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x020\x12./api/v1/namespaces/{namespace_key}/flags/{key}\x12\xa2\x01\n" +
	"\tListFlags\x12\x16.flipt.ListFlagRequest\x1a\x0f.flipt.FlagList\"l\xbaG\x19\n" +
	"\fFlagsService*\tlistFlags\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02*\x12(/api/v1/namespaces/{namespace_key}/flags\x12\xa5\x01\n" +
	"\n" +
	"CreateFlag\x12\x18.flipt.CreateFlagRequest\x1a\v.flipt.Flag\"p\xbaG\x1a\n" +
	"\fFlagsService*\n" +
	"createFlag\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02-:\x01*\"(/api/v1/namespaces/{namespace_key}/flags\x12\xab\x01\n" +
	"\n" +
	"UpdateFlag\x12\x18.flipt.UpdateFlagRequest\x1a\v.flipt.Flag\"v\xbaG\x1a\n" +
	"\fFlagsService*\n" +
	"updateFlag\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x023:\x01*\x1a./api/v1/namespaces/{namespace_key}/flags/{key}\x12\xb3\x01\n" +
	"\n" +
	"DeleteFlag\x12\x18.flipt.DeleteFlagRequest\x1a\x16.google.protobuf.Empty\"s\xbaG\x1a\n" +
	"\fFlagsService*\n" +
	"deleteFlag\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x020*./api/v1/namespaces/{namespace_key}/flags/{key}\x12\xc9\x01\n" +
	"\rCreateVariant\x12\x1b.flipt.CreateVariantRequest\x1a\x0e.flipt.Variant\"\x8a\x01\xbaG \n" +
	"\x0fVariantsService*\rcreateVariant\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02A:\x01*\"</api/v1/namespaces/{namespace_key}/flags/{flag_key}/variants\x12\xce\x01\n" +
	"\rUpdateVariant\x12\x1b.flipt.UpdateVariantRequest\x1a\x0e.flipt.Variant\"\x8f\x01\xbaG \n" +
	"\x0fVariantsService*\rupdateVariant\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02F:\x01*\x1aA/api/v1/namespaces/{namespace_key}/flags/{flag_key}/variants/{id}\x12\xd3\x01\n" +
	"\rDeleteVariant\x12\x1b.flipt.DeleteVariantRequest\x1a\x16.google.protobuf.Empty\"\x8c\x01\xbaG \n" +
	"\x0fVariantsService*\rdeleteVariant\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02C*A/api/v1/namespaces/{namespace_key}/flags/{flag_key}/variants/{id}\x12\xb0\x01\n" +
	"\aGetRule\x12\x15.flipt.GetRuleRequest\x1a\v.flipt.Rule\"\x80\x01\xbaG\x17\n" +
	"\fRulesService*\agetRule\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02@\x12>/api/v1/namespaces/{namespace_key}/flags/{flag_key}/rules/{id}\x12\xb3\x01\n" +
	"\tListRules\x12\x16.flipt.ListRuleRequest\x1a\x0f.flipt.RuleList\"}\xbaG\x19\n" +
	"\fRulesService*\tlistRules\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02;\x129/api/v1/namespaces/{namespace_key}/flags/{flag_key}/rules\x12\xb7\x01\n" +
	"\n" +
	"CreateRule\x12\x18.flipt.CreateRuleRequest\x1a\v.flipt.Rule\"\x81\x01\xbaG\x1a\n" +
	"\fRulesService*\n" +
	"createRule\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02>:\x01*\"9/api/v1/namespaces/{namespace_key}/flags/{flag_key}/rules\x12\xbc\x01\n" +
	"\n" +
	"UpdateRule\x12\x18.flipt.UpdateRuleRequest\x1a\v.flipt.Rule\"\x86\x01\xbaG\x1a\n" +
	"\fRulesService*\n" +
	"updateRule\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02C:\x01*\x1a>/api/v1/namespaces/{namespace_key}/flags/{flag_key}/rules/{id}\x12\xc8\x01\n" +
	"\n" +
	"OrderRules\x12\x18.flipt.OrderRulesRequest\x1a\x16.google.protobuf.Empty\"\x87\x01\xbaG\x1a\n" +
	"\fRulesService*\n" +
	"orderRules\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02D:\x01*\x1a?/api/v1/namespaces/{namespace_key}/flags/{flag_key}/rules/order\x12\xc4\x01\n" +
	"\n" +
	"DeleteRule\x12\x18.flipt.DeleteRuleRequest\x1a\x16.google.protobuf.Empty\"\x83\x01\xbaG\x1a\n" +
	"\fRulesService*\n" +
	"deleteRule\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02@*>/api/v1/namespaces/{namespace_key}/flags/{flag_key}/rules/{id}\x12\xc2\x01\n" +
	"\n" +
	"GetRollout\x12\x18.flipt.GetRolloutRequest\x1a\x0e.flipt.Rollout\"\x89\x01\xbaG\x1d\n" +
	"\x0fRolloutsService*\n" +
	"getRollout\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02C\x12A/api/v1/namespaces/{namespace_key}/flags/{flag_key}/rollouts/{id}\x12\xc6\x01\n" +
	"\fListRollouts\x12\x19.flipt.ListRolloutRequest\x1a\x12.flipt.RolloutList\"\x86\x01\xbaG\x1f\n" +
	"\x0fRolloutsService*\flistRollouts\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02>\x12</api/v1/namespaces/{namespace_key}/flags/{flag_key}/rollouts\x12\xc9\x01\n" +
	"\rCreateRollout\x12\x1b.flipt.CreateRolloutRequest\x1a\x0e.flipt.Rollout\"\x8a\x01\xbaG \n" +
	"\x0fRolloutsService*\rcreateRollout\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02A:\x01*\"</api/v1/namespaces/{namespace_key}/flags/{flag_key}/rollouts\x12\xce\x01\n" +
	"\rUpdateRollout\x12\x1b.flipt.UpdateRolloutRequest\x1a\x0e.flipt.Rollout\"\x8f\x01\xbaG \n" +
	"\x0fRolloutsService*\rupdateRollout\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02F:\x01*\x1aA/api/v1/namespaces/{namespace_key}/flags/{flag_key}/rollouts/{id}\x12\xd3\x01\n" +
	"\rDeleteRollout\x12\x1b.flipt.DeleteRolloutRequest\x1a\x16.google.protobuf.Empty\"\x8c\x01\xbaG \n" +
	"\x0fRolloutsService*\rdeleteRollout\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02C*A/api/v1/namespaces/{namespace_key}/flags/{flag_key}/rollouts/{id}\x12\xd7\x01\n" +
	"\rOrderRollouts\x12\x1b.flipt.OrderRolloutsRequest\x1a\x16.google.protobuf.Empty\"\x90\x01\xbaG \n" +
	"\x0fRolloutsService*\rorderRollouts\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02G:\x01*\x1aB/api/v1/namespaces/{namespace_key}/flags/{flag_key}/rollouts/order\x12\xf7\x01\n" +
	"\x12CreateDistribution\x12 .flipt.CreateDistributionRequest\x1a\x13.flipt.Distribution\"\xa9\x01\xbaG*\n" +
	"\x14DistributionsService*\x12createDistribution\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02V:\x01*\"Q/api/v1/namespaces/{namespace_key}/flags/{flag_key}/rules/{rule_id}/distributions\x12\xfc\x01\n" +
	"\x12UpdateDistribution\x12 .flipt.UpdateDistributionRequest\x1a\x13.flipt.Distribution\"\xae\x01\xbaG*\n" +
	"\x14DistributionsService*\x12updateDistribution\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02[:\x01*\x1aV/api/v1/namespaces/{namespace_key}/flags/{flag_key}/rules/{rule_id}/distributions/{id}\x12\xfc\x01\n" +
	"\x12DeleteDistribution\x12 .flipt.DeleteDistributionRequest\x1a\x16.google.protobuf.Empty\"\xab\x01\xbaG*\n" +
	"\x14DistributionsService*\x12deleteDistribution\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02X*V/api/v1/namespaces/{namespace_key}/flags/{flag_key}/rules/{rule_id}/distributions/{id}\x12\xb1\x01\n" +
	"\n" +
	"GetSegment\x12\x18.flipt.GetSegmentRequest\x1a\x0e.flipt.Segment\"y\xbaG\x1d\n" +
	"\x0fSegmentsService*\n" +
	"getSegment\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x023\x121/api/v1/namespaces/{namespace_key}/segments/{key}\x12\xb4\x01\n" +
	"\fListSegments\x12\x19.flipt.ListSegmentRequest\x1a\x12.flipt.SegmentList\"u\xbaG\x1f\n" +
	"\x0fSegmentsService*\flistSegments\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02-\x12+/api/v1/namespaces/{namespace_key}/segments\x12\xb7\x01\n" +
	"\rCreateSegment\x12\x1b.flipt.CreateSegmentRequest\x1a\x0e.flipt.Segment\"y\xbaG \n" +
	"\x0fSegmentsService*\rcreateSegment\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x020:\x01*\"+/api/v1/namespaces/{namespace_key}/segments\x12\xbd\x01\n" +
	"\rUpdateSegment\x12\x1b.flipt.UpdateSegmentRequest\x1a\x0e.flipt.Segment\"\x7f\xbaG \n" +
	"\x0fSegmentsService*\rupdateSegment\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x026:\x01*\x1a1/api/v1/namespaces/{namespace_key}/segments/{key}\x12\xc2\x01\n" +
	"\rDeleteSegment\x12\x1b.flipt.DeleteSegmentRequest\x1a\x16.google.protobuf.Empty\"|\xbaG \n" +
	"\x0fSegmentsService*\rdeleteSegment\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x023*1/api/v1/namespaces/{namespace_key}/segments/{key}\x12\xe1\x01\n" +
	"\x10CreateConstraint\x12\x1e.flipt.CreateConstraintRequest\x1a\x11.flipt.Constraint\"\x99\x01\xbaG&\n" +
	"\x12ConstraintsService*\x10createConstraint\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02J:\x01*\"E/api/v1/namespaces/{namespace_key}/segments/{segment_key}/constraints\x12\xe6\x01\n" +
	"\x10UpdateConstraint\x12\x1e.flipt.UpdateConstraintRequest\x1a\x11.flipt.Constraint\"\x9e\x01\xbaG&\n" +
	"\x12ConstraintsService*\x10updateConstraint\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02O:\x01*\x1aJ/api/v1/namespaces/{namespace_key}/segments/{segment_key}/constraints/{id}\x12\xe8\x01\n" +
	"\x10DeleteConstraint\x12\x1e.flipt.DeleteConstraintRequest\x1a\x16.google.protobuf.Empty\"\x9b\x01\xbaG&\n" +
	"\x12ConstraintsService*\x10deleteConstraint\x8a\xb3\x97\x8b\x01\x1a\n" +
	"\x18\n" +
	"\rnamespace_key\x12\adefault\x82\xd3\xe4\x93\x02L*J/api/v1/namespaces/{namespace_key}/segments/{segment_key}/constraints/{id}B\x1dZ\x1bgo.flipt.io/flipt/rpc/fliptb\x06proto3"

var (
	file_flipt_proto_rawDescOnce sync.Once
	file_flipt_proto_rawDescData []byte
)

func file_flipt_proto_rawDescGZIP() []byte {
	file_flipt_proto_rawDescOnce.Do(func() {
		file_flipt_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_flipt_proto_rawDesc), len(file_flipt_proto_rawDesc)))
	})
	return file_flipt_proto_rawDescData
}

var file_flipt_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_flipt_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_flipt_proto_goTypes = []any{
	(EvaluationReason)(0),             // 0: flipt.EvaluationReason
	(FlagType)(0),                     // 1: flipt.FlagType
	(MatchType)(0),                    // 2: flipt.MatchType
	(ComparisonType)(0),               // 3: flipt.ComparisonType
	(RolloutType)(0),                  // 4: flipt.RolloutType
	(SegmentOperator)(0),              // 5: flipt.SegmentOperator
	(*EvaluationRequest)(nil),         // 6: flipt.EvaluationRequest
	(*BatchEvaluationRequest)(nil),    // 7: flipt.BatchEvaluationRequest
	(*BatchEvaluationResponse)(nil),   // 8: flipt.BatchEvaluationResponse
	(*EvaluationResponse)(nil),        // 9: flipt.EvaluationResponse
	(*Namespace)(nil),                 // 10: flipt.Namespace
	(*NamespaceList)(nil),             // 11: flipt.NamespaceList
	(*GetNamespaceRequest)(nil),       // 12: flipt.GetNamespaceRequest
	(*ListNamespaceRequest)(nil),      // 13: flipt.ListNamespaceRequest
	(*CreateNamespaceRequest)(nil),    // 14: flipt.CreateNamespaceRequest
	(*UpdateNamespaceRequest)(nil),    // 15: flipt.UpdateNamespaceRequest
	(*DeleteNamespaceRequest)(nil),    // 16: flipt.DeleteNamespaceRequest
	(*Flag)(nil),                      // 17: flipt.Flag
	(*FlagList)(nil),                  // 18: flipt.FlagList
	(*GetFlagRequest)(nil),            // 19: flipt.GetFlagRequest
	(*ListFlagRequest)(nil),           // 20: flipt.ListFlagRequest
	(*CreateFlagRequest)(nil),         // 21: flipt.CreateFlagRequest
	(*UpdateFlagRequest)(nil),         // 22: flipt.UpdateFlagRequest
	(*DeleteFlagRequest)(nil),         // 23: flipt.DeleteFlagRequest
	(*Variant)(nil),                   // 24: flipt.Variant
	(*CreateVariantRequest)(nil),      // 25: flipt.CreateVariantRequest
	(*UpdateVariantRequest)(nil),      // 26: flipt.UpdateVariantRequest
	(*DeleteVariantRequest)(nil),      // 27: flipt.DeleteVariantRequest
	(*Segment)(nil),                   // 28: flipt.Segment
	(*SegmentList)(nil),               // 29: flipt.SegmentList
	(*GetSegmentRequest)(nil),         // 30: flipt.GetSegmentRequest
	(*ListSegmentRequest)(nil),        // 31: flipt.ListSegmentRequest
	(*CreateSegmentRequest)(nil),      // 32: flipt.CreateSegmentRequest
	(*UpdateSegmentRequest)(nil),      // 33: flipt.UpdateSegmentRequest
	(*DeleteSegmentRequest)(nil),      // 34: flipt.DeleteSegmentRequest
	(*Constraint)(nil),                // 35: flipt.Constraint
	(*CreateConstraintRequest)(nil),   // 36: flipt.CreateConstraintRequest
	(*UpdateConstraintRequest)(nil),   // 37: flipt.UpdateConstraintRequest
	(*DeleteConstraintRequest)(nil),   // 38: flipt.DeleteConstraintRequest
	(*Rollout)(nil),                   // 39: flipt.Rollout
	(*RolloutSegment)(nil),            // 40: flipt.RolloutSegment
	(*RolloutThreshold)(nil),          // 41: flipt.RolloutThreshold
	(*RolloutList)(nil),               // 42: flipt.RolloutList
	(*ListRolloutRequest)(nil),        // 43: flipt.ListRolloutRequest
	(*GetRolloutRequest)(nil),         // 44: flipt.GetRolloutRequest
	(*CreateRolloutRequest)(nil),      // 45: flipt.CreateRolloutRequest
	(*UpdateRolloutRequest)(nil),      // 46: flipt.UpdateRolloutRequest
	(*DeleteRolloutRequest)(nil),      // 47: flipt.DeleteRolloutRequest
	(*OrderRolloutsRequest)(nil),      // 48: flipt.OrderRolloutsRequest
	(*Rule)(nil),                      // 49: flipt.Rule
	(*RuleList)(nil),                  // 50: flipt.RuleList
	(*ListRuleRequest)(nil),           // 51: flipt.ListRuleRequest
	(*GetRuleRequest)(nil),            // 52: flipt.GetRuleRequest
	(*CreateRuleRequest)(nil),         // 53: flipt.CreateRuleRequest
	(*UpdateRuleRequest)(nil),         // 54: flipt.UpdateRuleRequest
	(*DeleteRuleRequest)(nil),         // 55: flipt.DeleteRuleRequest
	(*OrderRulesRequest)(nil),         // 56: flipt.OrderRulesRequest
	(*Distribution)(nil),              // 57: flipt.Distribution
	(*CreateDistributionRequest)(nil), // 58: flipt.CreateDistributionRequest
	(*UpdateDistributionRequest)(nil), // 59: flipt.UpdateDistributionRequest
	(*DeleteDistributionRequest)(nil), // 60: flipt.DeleteDistributionRequest
	nil,                               // 61: flipt.EvaluationRequest.ContextEntry
	nil,                               // 62: flipt.EvaluationResponse.RequestContextEntry
	(*timestamppb.Timestamp)(nil),     // 63: google.protobuf.Timestamp
	(*structpb.Struct)(nil),           // 64: google.protobuf.Struct
	(*emptypb.Empty)(nil),             // 65: google.protobuf.Empty
}
var file_flipt_proto_depIdxs = []int32{
	61, // 0: flipt.EvaluationRequest.context:type_name -> flipt.EvaluationRequest.ContextEntry
	6,  // 1: flipt.BatchEvaluationRequest.requests:type_name -> flipt.EvaluationRequest
	9,  // 2: flipt.BatchEvaluationResponse.responses:type_name -> flipt.EvaluationResponse
	62, // 3: flipt.EvaluationResponse.request_context:type_name -> flipt.EvaluationResponse.RequestContextEntry
	63, // 4: flipt.EvaluationResponse.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 5: flipt.EvaluationResponse.reason:type_name -> flipt.EvaluationReason
	63, // 6: flipt.Namespace.created_at:type_name -> google.protobuf.Timestamp
	63, // 7: flipt.Namespace.updated_at:type_name -> google.protobuf.Timestamp
	10, // 8: flipt.NamespaceList.namespaces:type_name -> flipt.Namespace
	63, // 9: flipt.Flag.created_at:type_name -> google.protobuf.Timestamp
	63, // 10: flipt.Flag.updated_at:type_name -> google.protobuf.Timestamp
	24, // 11: flipt.Flag.variants:type_name -> flipt.Variant
	1,  // 12: flipt.Flag.type:type_name -> flipt.FlagType
	24, // 13: flipt.Flag.default_variant:type_name -> flipt.Variant
	64, // 14: flipt.Flag.metadata:type_name -> google.protobuf.Struct
	17, // 15: flipt.FlagList.flags:type_name -> flipt.Flag
	1,  // 16: flipt.CreateFlagRequest.type:type_name -> flipt.FlagType
	64, // 17: flipt.CreateFlagRequest.metadata:type_name -> google.protobuf.Struct
	64, // 18: flipt.UpdateFlagRequest.metadata:type_name -> google.protobuf.Struct
	63, // 19: flipt.Variant.created_at:type_name -> google.protobuf.Timestamp
	63, // 20: flipt.Variant.updated_at:type_name -> google.protobuf.Timestamp
	63, // 21: flipt.Segment.created_at:type_name -> google.protobuf.Timestamp
	63, // 22: flipt.Segment.updated_at:type_name -> google.protobuf.Timestamp
	35, // 23: flipt.Segment.constraints:type_name -> flipt.Constraint
	2,  // 24: flipt.Segment.match_type:type_name -> flipt.MatchType
	28, // 25: flipt.SegmentList.segments:type_name -> flipt.Segment
	2,  // 26: flipt.CreateSegmentRequest.match_type:type_name -> flipt.MatchType
	2,  // 27: flipt.UpdateSegmentRequest.match_type:type_name -> flipt.MatchType
	3,  // 28: flipt.Constraint.type:type_name -> flipt.ComparisonType
	63, // 29: flipt.Constraint.created_at:type_name -> google.protobuf.Timestamp
	63, // 30: flipt.Constraint.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 31: flipt.CreateConstraintRequest.type:type_name -> flipt.ComparisonType
	3,  // 32: flipt.UpdateConstraintRequest.type:type_name -> flipt.ComparisonType
	4,  // 33: flipt.Rollout.type:type_name -> flipt.RolloutType
	63, // 34: flipt.Rollout.created_at:type_name -> google.protobuf.Timestamp
	63, // 35: flipt.Rollout.updated_at:type_name -> google.protobuf.Timestamp
	40, // 36: flipt.Rollout.segment:type_name -> flipt.RolloutSegment
	41, // 37: flipt.Rollout.threshold:type_name -> flipt.RolloutThreshold
	5,  // 38: flipt.RolloutSegment.segment_operator:type_name -> flipt.SegmentOperator
	39, // 39: flipt.RolloutList.rules:type_name -> flipt.Rollout
	40, // 40: flipt.CreateRolloutRequest.segment:type_name -> flipt.RolloutSegment
	41, // 41: flipt.CreateRolloutRequest.threshold:type_name -> flipt.RolloutThreshold
	40, // 42: flipt.UpdateRolloutRequest.segment:type_name -> flipt.RolloutSegment
	41, // 43: flipt.UpdateRolloutRequest.threshold:type_name -> flipt.RolloutThreshold
	57, // 44: flipt.Rule.distributions:type_name -> flipt.Distribution
	63, // 45: flipt.Rule.created_at:type_name -> google.protobuf.Timestamp
	63, // 46: flipt.Rule.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 47: flipt.Rule.segment_operator:type_name -> flipt.SegmentOperator
	49, // 48: flipt.RuleList.rules:type_name -> flipt.Rule
	5,  // 49: flipt.CreateRuleRequest.segment_operator:type_name -> flipt.SegmentOperator
	5,  // 50: flipt.UpdateRuleRequest.segment_operator:type_name -> flipt.SegmentOperator
	63, // 51: flipt.Distribution.created_at:type_name -> google.protobuf.Timestamp
	63, // 52: flipt.Distribution.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 53: flipt.Flipt.Evaluate:input_type -> flipt.EvaluationRequest
	7,  // 54: flipt.Flipt.BatchEvaluate:input_type -> flipt.BatchEvaluationRequest
	12, // 55: flipt.Flipt.GetNamespace:input_type -> flipt.GetNamespaceRequest
	13, // 56: flipt.Flipt.ListNamespaces:input_type -> flipt.ListNamespaceRequest
	14, // 57: flipt.Flipt.CreateNamespace:input_type -> flipt.CreateNamespaceRequest
	15, // 58: flipt.Flipt.UpdateNamespace:input_type -> flipt.UpdateNamespaceRequest
	16, // 59: flipt.Flipt.DeleteNamespace:input_type -> flipt.DeleteNamespaceRequest
	19, // 60: flipt.Flipt.GetFlag:input_type -> flipt.GetFlagRequest
	20, // 61: flipt.Flipt.ListFlags:input_type -> flipt.ListFlagRequest
	21, // 62: flipt.Flipt.CreateFlag:input_type -> flipt.CreateFlagRequest
	22, // 63: flipt.Flipt.UpdateFlag:input_type -> flipt.UpdateFlagRequest
	23, // 64: flipt.Flipt.DeleteFlag:input_type -> flipt.DeleteFlagRequest
	25, // 65: flipt.Flipt.CreateVariant:input_type -> flipt.CreateVariantRequest
	26, // 66: flipt.Flipt.UpdateVariant:input_type -> flipt.UpdateVariantRequest
	27, // 67: flipt.Flipt.DeleteVariant:input_type -> flipt.DeleteVariantRequest
	52, // 68: flipt.Flipt.GetRule:input_type -> flipt.GetRuleRequest
	51, // 69: flipt.Flipt.ListRules:input_type -> flipt.ListRuleRequest
	53, // 70: flipt.Flipt.CreateRule:input_type -> flipt.CreateRuleRequest
	54, // 71: flipt.Flipt.UpdateRule:input_type -> flipt.UpdateRuleRequest
	56, // 72: flipt.Flipt.OrderRules:input_type -> flipt.OrderRulesRequest
	55, // 73: flipt.Flipt.DeleteRule:input_type -> flipt.DeleteRuleRequest
	44, // 74: flipt.Flipt.GetRollout:input_type -> flipt.GetRolloutRequest
	43, // 75: flipt.Flipt.ListRollouts:input_type -> flipt.ListRolloutRequest
	45, // 76: flipt.Flipt.CreateRollout:input_type -> flipt.CreateRolloutRequest
	46, // 77: flipt.Flipt.UpdateRollout:input_type -> flipt.UpdateRolloutRequest
	47, // 78: flipt.Flipt.DeleteRollout:input_type -> flipt.DeleteRolloutRequest
	48, // 79: flipt.Flipt.OrderRollouts:input_type -> flipt.OrderRolloutsRequest
	58, // 80: flipt.Flipt.CreateDistribution:input_type -> flipt.CreateDistributionRequest
	59, // 81: flipt.Flipt.UpdateDistribution:input_type -> flipt.UpdateDistributionRequest
	60, // 82: flipt.Flipt.DeleteDistribution:input_type -> flipt.DeleteDistributionRequest
	30, // 83: flipt.Flipt.GetSegment:input_type -> flipt.GetSegmentRequest
	31, // 84: flipt.Flipt.ListSegments:input_type -> flipt.ListSegmentRequest
	32, // 85: flipt.Flipt.CreateSegment:input_type -> flipt.CreateSegmentRequest
	33, // 86: flipt.Flipt.UpdateSegment:input_type -> flipt.UpdateSegmentRequest
	34, // 87: flipt.Flipt.DeleteSegment:input_type -> flipt.DeleteSegmentRequest
	36, // 88: flipt.Flipt.CreateConstraint:input_type -> flipt.CreateConstraintRequest
	37, // 89: flipt.Flipt.UpdateConstraint:input_type -> flipt.UpdateConstraintRequest
	38, // 90: flipt.Flipt.DeleteConstraint:input_type -> flipt.DeleteConstraintRequest
	9,  // 91: flipt.Flipt.Evaluate:output_type -> flipt.EvaluationResponse
	8,  // 92: flipt.Flipt.BatchEvaluate:output_type -> flipt.BatchEvaluationResponse
	10, // 93: flipt.Flipt.GetNamespace:output_type -> flipt.Namespace
	11, // 94: flipt.Flipt.ListNamespaces:output_type -> flipt.NamespaceList
	10, // 95: flipt.Flipt.CreateNamespace:output_type -> flipt.Namespace
	10, // 96: flipt.Flipt.UpdateNamespace:output_type -> flipt.Namespace
	65, // 97: flipt.Flipt.DeleteNamespace:output_type -> google.protobuf.Empty
	17, // 98: flipt.Flipt.GetFlag:output_type -> flipt.Flag
	18, // 99: flipt.Flipt.ListFlags:output_type -> flipt.FlagList
	17, // 100: flipt.Flipt.CreateFlag:output_type -> flipt.Flag
	17, // 101: flipt.Flipt.UpdateFlag:output_type -> flipt.Flag
	65, // 102: flipt.Flipt.DeleteFlag:output_type -> google.protobuf.Empty
	24, // 103: flipt.Flipt.CreateVariant:output_type -> flipt.Variant
	24, // 104: flipt.Flipt.UpdateVariant:output_type -> flipt.Variant
	65, // 105: flipt.Flipt.DeleteVariant:output_type -> google.protobuf.Empty
	49, // 106: flipt.Flipt.GetRule:output_type -> flipt.Rule
	50, // 107: flipt.Flipt.ListRules:output_type -> flipt.RuleList
	49, // 108: flipt.Flipt.CreateRule:output_type -> flipt.Rule
	49, // 109: flipt.Flipt.UpdateRule:output_type -> flipt.Rule
	65, // 110: flipt.Flipt.OrderRules:output_type -> google.protobuf.Empty
	65, // 111: flipt.Flipt.DeleteRule:output_type -> google.protobuf.Empty
	39, // 112: flipt.Flipt.GetRollout:output_type -> flipt.Rollout
	42, // 113: flipt.Flipt.ListRollouts:output_type -> flipt.RolloutList
	39, // 114: flipt.Flipt.CreateRollout:output_type -> flipt.Rollout
	39, // 115: flipt.Flipt.UpdateRollout:output_type -> flipt.Rollout
	65, // 116: flipt.Flipt.DeleteRollout:output_type -> google.protobuf.Empty
	65, // 117: flipt.Flipt.OrderRollouts:output_type -> google.protobuf.Empty
	57, // 118: flipt.Flipt.CreateDistribution:output_type -> flipt.Distribution
	57, // 119: flipt.Flipt.UpdateDistribution:output_type -> flipt.Distribution
	65, // 120: flipt.Flipt.DeleteDistribution:output_type -> google.protobuf.Empty
	28, // 121: flipt.Flipt.GetSegment:output_type -> flipt.Segment
	29, // 122: flipt.Flipt.ListSegments:output_type -> flipt.SegmentList
	28, // 123: flipt.Flipt.CreateSegment:output_type -> flipt.Segment
	28, // 124: flipt.Flipt.UpdateSegment:output_type -> flipt.Segment
	65, // 125: flipt.Flipt.DeleteSegment:output_type -> google.protobuf.Empty
	35, // 126: flipt.Flipt.CreateConstraint:output_type -> flipt.Constraint
	35, // 127: flipt.Flipt.UpdateConstraint:output_type -> flipt.Constraint
	65, // 128: flipt.Flipt.DeleteConstraint:output_type -> google.protobuf.Empty
	91, // [91:129] is the sub-list for method output_type
	53, // [53:91] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_flipt_proto_init() }
func file_flipt_proto_init() {
	if File_flipt_proto != nil {
		return
	}
	file_flipt_proto_msgTypes[11].OneofWrappers = []any{}
	file_flipt_proto_msgTypes[15].OneofWrappers = []any{}
	file_flipt_proto_msgTypes[16].OneofWrappers = []any{}
	file_flipt_proto_msgTypes[33].OneofWrappers = []any{
		(*Rollout_Segment)(nil),
		(*Rollout_Threshold)(nil),
	}
	file_flipt_proto_msgTypes[39].OneofWrappers = []any{
		(*CreateRolloutRequest_Segment)(nil),
		(*CreateRolloutRequest_Threshold)(nil),
	}
	file_flipt_proto_msgTypes[40].OneofWrappers = []any{
		(*UpdateRolloutRequest_Segment)(nil),
		(*UpdateRolloutRequest_Threshold)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_flipt_proto_rawDesc), len(file_flipt_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flipt_proto_goTypes,
		DependencyIndexes: file_flipt_proto_depIdxs,
		EnumInfos:         file_flipt_proto_enumTypes,
		MessageInfos:      file_flipt_proto_msgTypes,
	}.Build()
	File_flipt_proto = out.File
	file_flipt_proto_goTypes = nil
	file_flipt_proto_depIdxs = nil
}
