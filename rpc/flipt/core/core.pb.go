// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: core/core.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FlagType int32

const (
	FlagType_VARIANT_FLAG_TYPE FlagType = 0
	FlagType_BOOLEAN_FLAG_TYPE FlagType = 1
)

// Enum value maps for FlagType.
var (
	FlagType_name = map[int32]string{
		0: "VARIANT_FLAG_TYPE",
		1: "BOOLEAN_FLAG_TYPE",
	}
	FlagType_value = map[string]int32{
		"VARIANT_FLAG_TYPE": 0,
		"BOOLEAN_FLAG_TYPE": 1,
	}
)

func (x FlagType) Enum() *FlagType {
	p := new(FlagType)
	*p = x
	return p
}

func (x FlagType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlagType) Descriptor() protoreflect.EnumDescriptor {
	return file_core_core_proto_enumTypes[0].Descriptor()
}

func (FlagType) Type() protoreflect.EnumType {
	return &file_core_core_proto_enumTypes[0]
}

func (x FlagType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlagType.Descriptor instead.
func (FlagType) EnumDescriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{0}
}

type SegmentOperator int32

const (
	SegmentOperator_OR_SEGMENT_OPERATOR  SegmentOperator = 0
	SegmentOperator_AND_SEGMENT_OPERATOR SegmentOperator = 1
)

// Enum value maps for SegmentOperator.
var (
	SegmentOperator_name = map[int32]string{
		0: "OR_SEGMENT_OPERATOR",
		1: "AND_SEGMENT_OPERATOR",
	}
	SegmentOperator_value = map[string]int32{
		"OR_SEGMENT_OPERATOR":  0,
		"AND_SEGMENT_OPERATOR": 1,
	}
)

func (x SegmentOperator) Enum() *SegmentOperator {
	p := new(SegmentOperator)
	*p = x
	return p
}

func (x SegmentOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SegmentOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_core_core_proto_enumTypes[1].Descriptor()
}

func (SegmentOperator) Type() protoreflect.EnumType {
	return &file_core_core_proto_enumTypes[1]
}

func (x SegmentOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SegmentOperator.Descriptor instead.
func (SegmentOperator) EnumDescriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{1}
}

type RolloutType int32

const (
	RolloutType_UNKNOWN_ROLLOUT_TYPE   RolloutType = 0
	RolloutType_SEGMENT_ROLLOUT_TYPE   RolloutType = 1
	RolloutType_THRESHOLD_ROLLOUT_TYPE RolloutType = 2
)

// Enum value maps for RolloutType.
var (
	RolloutType_name = map[int32]string{
		0: "UNKNOWN_ROLLOUT_TYPE",
		1: "SEGMENT_ROLLOUT_TYPE",
		2: "THRESHOLD_ROLLOUT_TYPE",
	}
	RolloutType_value = map[string]int32{
		"UNKNOWN_ROLLOUT_TYPE":   0,
		"SEGMENT_ROLLOUT_TYPE":   1,
		"THRESHOLD_ROLLOUT_TYPE": 2,
	}
)

func (x RolloutType) Enum() *RolloutType {
	p := new(RolloutType)
	*p = x
	return p
}

func (x RolloutType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RolloutType) Descriptor() protoreflect.EnumDescriptor {
	return file_core_core_proto_enumTypes[2].Descriptor()
}

func (RolloutType) Type() protoreflect.EnumType {
	return &file_core_core_proto_enumTypes[2]
}

func (x RolloutType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RolloutType.Descriptor instead.
func (RolloutType) EnumDescriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{2}
}

type MatchType int32

const (
	MatchType_ALL_MATCH_TYPE MatchType = 0
	MatchType_ANY_MATCH_TYPE MatchType = 1
)

// Enum value maps for MatchType.
var (
	MatchType_name = map[int32]string{
		0: "ALL_MATCH_TYPE",
		1: "ANY_MATCH_TYPE",
	}
	MatchType_value = map[string]int32{
		"ALL_MATCH_TYPE": 0,
		"ANY_MATCH_TYPE": 1,
	}
)

func (x MatchType) Enum() *MatchType {
	p := new(MatchType)
	*p = x
	return p
}

func (x MatchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchType) Descriptor() protoreflect.EnumDescriptor {
	return file_core_core_proto_enumTypes[3].Descriptor()
}

func (MatchType) Type() protoreflect.EnumType {
	return &file_core_core_proto_enumTypes[3]
}

func (x MatchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchType.Descriptor instead.
func (MatchType) EnumDescriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{3}
}

type ComparisonType int32

const (
	ComparisonType_UNKNOWN_COMPARISON_TYPE   ComparisonType = 0
	ComparisonType_STRING_COMPARISON_TYPE    ComparisonType = 1
	ComparisonType_NUMBER_COMPARISON_TYPE    ComparisonType = 2
	ComparisonType_BOOLEAN_COMPARISON_TYPE   ComparisonType = 3
	ComparisonType_DATETIME_COMPARISON_TYPE  ComparisonType = 4
	ComparisonType_ENTITY_ID_COMPARISON_TYPE ComparisonType = 5
)

// Enum value maps for ComparisonType.
var (
	ComparisonType_name = map[int32]string{
		0: "UNKNOWN_COMPARISON_TYPE",
		1: "STRING_COMPARISON_TYPE",
		2: "NUMBER_COMPARISON_TYPE",
		3: "BOOLEAN_COMPARISON_TYPE",
		4: "DATETIME_COMPARISON_TYPE",
		5: "ENTITY_ID_COMPARISON_TYPE",
	}
	ComparisonType_value = map[string]int32{
		"UNKNOWN_COMPARISON_TYPE":   0,
		"STRING_COMPARISON_TYPE":    1,
		"NUMBER_COMPARISON_TYPE":    2,
		"BOOLEAN_COMPARISON_TYPE":   3,
		"DATETIME_COMPARISON_TYPE":  4,
		"ENTITY_ID_COMPARISON_TYPE": 5,
	}
)

func (x ComparisonType) Enum() *ComparisonType {
	p := new(ComparisonType)
	*p = x
	return p
}

func (x ComparisonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComparisonType) Descriptor() protoreflect.EnumDescriptor {
	return file_core_core_proto_enumTypes[4].Descriptor()
}

func (ComparisonType) Type() protoreflect.EnumType {
	return &file_core_core_proto_enumTypes[4]
}

func (x ComparisonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComparisonType.Descriptor instead.
func (ComparisonType) EnumDescriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{4}
}

type Flag struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Key            string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Type           FlagType               `protobuf:"varint,2,opt,name=type,proto3,enum=flipt.core.FlagType" json:"type,omitempty"`
	Name           string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Enabled        bool                   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Variants       []*Variant             `protobuf:"bytes,6,rep,name=variants,proto3" json:"variants,omitempty"`
	Rules          []*Rule                `protobuf:"bytes,7,rep,name=rules,proto3" json:"rules,omitempty"`
	Rollouts       []*Rollout             `protobuf:"bytes,8,rep,name=rollouts,proto3" json:"rollouts,omitempty"`
	DefaultVariant *string                `protobuf:"bytes,9,opt,name=default_variant,json=defaultVariant,proto3,oneof" json:"default_variant,omitempty"`
	Metadata       *structpb.Struct       `protobuf:"bytes,10,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Flag) Reset() {
	*x = Flag{}
	mi := &file_core_core_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flag) ProtoMessage() {}

func (x *Flag) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flag.ProtoReflect.Descriptor instead.
func (*Flag) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{0}
}

func (x *Flag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Flag) GetType() FlagType {
	if x != nil {
		return x.Type
	}
	return FlagType_VARIANT_FLAG_TYPE
}

func (x *Flag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Flag) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Flag) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Flag) GetVariants() []*Variant {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *Flag) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *Flag) GetRollouts() []*Rollout {
	if x != nil {
		return x.Rollouts
	}
	return nil
}

func (x *Flag) GetDefaultVariant() string {
	if x != nil && x.DefaultVariant != nil {
		return *x.DefaultVariant
	}
	return ""
}

func (x *Flag) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Variant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Attachment    *structpb.Value        `protobuf:"bytes,4,opt,name=attachment,proto3,oneof" json:"attachment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Variant) Reset() {
	*x = Variant{}
	mi := &file_core_core_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Variant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variant) ProtoMessage() {}

func (x *Variant) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variant.ProtoReflect.Descriptor instead.
func (*Variant) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{1}
}

func (x *Variant) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Variant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Variant) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Variant) GetAttachment() *structpb.Value {
	if x != nil {
		return x.Attachment
	}
	return nil
}

type Rule struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SegmentOperator SegmentOperator        `protobuf:"varint,1,opt,name=segment_operator,json=segmentOperator,proto3,enum=flipt.core.SegmentOperator" json:"segment_operator,omitempty"`
	Segments        []string               `protobuf:"bytes,2,rep,name=segments,proto3" json:"segments,omitempty"`
	Distributions   []*Distribution        `protobuf:"bytes,3,rep,name=distributions,proto3" json:"distributions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Rule) Reset() {
	*x = Rule{}
	mi := &file_core_core_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{2}
}

func (x *Rule) GetSegmentOperator() SegmentOperator {
	if x != nil {
		return x.SegmentOperator
	}
	return SegmentOperator_OR_SEGMENT_OPERATOR
}

func (x *Rule) GetSegments() []string {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *Rule) GetDistributions() []*Distribution {
	if x != nil {
		return x.Distributions
	}
	return nil
}

type Distribution struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Variant       string                 `protobuf:"bytes,1,opt,name=variant,proto3" json:"variant,omitempty"`
	Rollout       float32                `protobuf:"fixed32,2,opt,name=rollout,proto3" json:"rollout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Distribution) Reset() {
	*x = Distribution{}
	mi := &file_core_core_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Distribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Distribution) ProtoMessage() {}

func (x *Distribution) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Distribution.ProtoReflect.Descriptor instead.
func (*Distribution) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{3}
}

func (x *Distribution) GetVariant() string {
	if x != nil {
		return x.Variant
	}
	return ""
}

func (x *Distribution) GetRollout() float32 {
	if x != nil {
		return x.Rollout
	}
	return 0
}

type Rollout struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Type        RolloutType            `protobuf:"varint,1,opt,name=type,proto3,enum=flipt.core.RolloutType" json:"type,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are valid to be assigned to Rule:
	//
	//	*Rollout_Segment
	//	*Rollout_Threshold
	Rule          isRollout_Rule `protobuf_oneof:"rule"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rollout) Reset() {
	*x = Rollout{}
	mi := &file_core_core_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rollout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rollout) ProtoMessage() {}

func (x *Rollout) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rollout.ProtoReflect.Descriptor instead.
func (*Rollout) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{4}
}

func (x *Rollout) GetType() RolloutType {
	if x != nil {
		return x.Type
	}
	return RolloutType_UNKNOWN_ROLLOUT_TYPE
}

func (x *Rollout) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Rollout) GetRule() isRollout_Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *Rollout) GetSegment() *RolloutSegment {
	if x != nil {
		if x, ok := x.Rule.(*Rollout_Segment); ok {
			return x.Segment
		}
	}
	return nil
}

func (x *Rollout) GetThreshold() *RolloutThreshold {
	if x != nil {
		if x, ok := x.Rule.(*Rollout_Threshold); ok {
			return x.Threshold
		}
	}
	return nil
}

type isRollout_Rule interface {
	isRollout_Rule()
}

type Rollout_Segment struct {
	Segment *RolloutSegment `protobuf:"bytes,20,opt,name=segment,proto3,oneof"`
}

type Rollout_Threshold struct {
	Threshold *RolloutThreshold `protobuf:"bytes,21,opt,name=threshold,proto3,oneof"`
}

func (*Rollout_Segment) isRollout_Rule() {}

func (*Rollout_Threshold) isRollout_Rule() {}

type RolloutSegment struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Value           bool                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Segments        []string               `protobuf:"bytes,2,rep,name=segments,proto3" json:"segments,omitempty"`
	SegmentOperator SegmentOperator        `protobuf:"varint,3,opt,name=segment_operator,json=segmentOperator,proto3,enum=flipt.core.SegmentOperator" json:"segment_operator,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RolloutSegment) Reset() {
	*x = RolloutSegment{}
	mi := &file_core_core_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolloutSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolloutSegment) ProtoMessage() {}

func (x *RolloutSegment) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolloutSegment.ProtoReflect.Descriptor instead.
func (*RolloutSegment) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{5}
}

func (x *RolloutSegment) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *RolloutSegment) GetSegments() []string {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *RolloutSegment) GetSegmentOperator() SegmentOperator {
	if x != nil {
		return x.SegmentOperator
	}
	return SegmentOperator_OR_SEGMENT_OPERATOR
}

type RolloutThreshold struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Percentage    float32                `protobuf:"fixed32,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Value         bool                   `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolloutThreshold) Reset() {
	*x = RolloutThreshold{}
	mi := &file_core_core_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolloutThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolloutThreshold) ProtoMessage() {}

func (x *RolloutThreshold) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolloutThreshold.ProtoReflect.Descriptor instead.
func (*RolloutThreshold) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{6}
}

func (x *RolloutThreshold) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *RolloutThreshold) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type Segment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	MatchType     MatchType              `protobuf:"varint,2,opt,name=match_type,json=matchType,proto3,enum=flipt.core.MatchType" json:"match_type,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Constraints   []*Constraint          `protobuf:"bytes,5,rep,name=constraints,proto3" json:"constraints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Segment) Reset() {
	*x = Segment{}
	mi := &file_core_core_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{7}
}

func (x *Segment) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Segment) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_ALL_MATCH_TYPE
}

func (x *Segment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Segment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Segment) GetConstraints() []*Constraint {
	if x != nil {
		return x.Constraints
	}
	return nil
}

type Constraint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ComparisonType         `protobuf:"varint,1,opt,name=type,proto3,enum=flipt.core.ComparisonType" json:"type,omitempty"`
	Property      string                 `protobuf:"bytes,2,opt,name=property,proto3" json:"property,omitempty"`
	Operator      string                 `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	Value         string                 `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Constraint) Reset() {
	*x = Constraint{}
	mi := &file_core_core_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Constraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Constraint) ProtoMessage() {}

func (x *Constraint) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Constraint.ProtoReflect.Descriptor instead.
func (*Constraint) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{8}
}

func (x *Constraint) GetType() ComparisonType {
	if x != nil {
		return x.Type
	}
	return ComparisonType_UNKNOWN_COMPARISON_TYPE
}

func (x *Constraint) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (x *Constraint) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *Constraint) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Constraint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_core_core_proto protoreflect.FileDescriptor

const file_core_core_proto_rawDesc = "" +
	"\n" +
	"\x0fcore/core.proto\x12\n" +
	"flipt.core\x1a\x1cgoogle/protobuf/struct.proto\"\xa5\x03\n" +
	"\x04Flag\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x04type\x18\x02 \x01(\x0e2\x14.flipt.core.FlagTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\aenabled\x18\x05 \x01(\bR\aenabled\x12/\n" +
	"\bvariants\x18\x06 \x03(\v2\x13.flipt.core.VariantR\bvariants\x12&\n" +
	"\x05rules\x18\a \x03(\v2\x10.flipt.core.RuleR\x05rules\x12/\n" +
	"\brollouts\x18\b \x03(\v2\x13.flipt.core.RolloutR\brollouts\x12,\n" +
	"\x0fdefault_variant\x18\t \x01(\tH\x00R\x0edefaultVariant\x88\x01\x01\x128\n" +
	"\bmetadata\x18\n" +
	" \x01(\v2\x17.google.protobuf.StructH\x01R\bmetadata\x88\x01\x01B\x12\n" +
	"\x10_default_variantB\v\n" +
	"\t_metadata\"\x9d\x01\n" +
	"\aVariant\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12;\n" +
	"\n" +
	"attachment\x18\x04 \x01(\v2\x16.google.protobuf.ValueH\x00R\n" +
	"attachment\x88\x01\x01B\r\n" +
	"\v_attachment\"\xaa\x01\n" +
	"\x04Rule\x12F\n" +
	"\x10segment_operator\x18\x01 \x01(\x0e2\x1b.flipt.core.SegmentOperatorR\x0fsegmentOperator\x12\x1a\n" +
	"\bsegments\x18\x02 \x03(\tR\bsegments\x12>\n" +
	"\rdistributions\x18\x03 \x03(\v2\x18.flipt.core.DistributionR\rdistributions\"B\n" +
	"\fDistribution\x12\x18\n" +
	"\avariant\x18\x01 \x01(\tR\avariant\x12\x18\n" +
	"\arollout\x18\x02 \x01(\x02R\arollout\"\xd6\x01\n" +
	"\aRollout\x12+\n" +
	"\x04type\x18\x01 \x01(\x0e2\x17.flipt.core.RolloutTypeR\x04type\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x126\n" +
	"\asegment\x18\x14 \x01(\v2\x1a.flipt.core.RolloutSegmentH\x00R\asegment\x12<\n" +
	"\tthreshold\x18\x15 \x01(\v2\x1c.flipt.core.RolloutThresholdH\x00R\tthresholdB\x06\n" +
	"\x04rule\"\x8a\x01\n" +
	"\x0eRolloutSegment\x12\x14\n" +
	"\x05value\x18\x01 \x01(\bR\x05value\x12\x1a\n" +
	"\bsegments\x18\x02 \x03(\tR\bsegments\x12F\n" +
	"\x10segment_operator\x18\x03 \x01(\x0e2\x1b.flipt.core.SegmentOperatorR\x0fsegmentOperator\"H\n" +
	"\x10RolloutThreshold\x12\x1e\n" +
	"\n" +
	"percentage\x18\x01 \x01(\x02R\n" +
	"percentage\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value\"\xc1\x01\n" +
	"\aSegment\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\n" +
	"match_type\x18\x02 \x01(\x0e2\x15.flipt.core.MatchTypeR\tmatchType\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x128\n" +
	"\vconstraints\x18\x05 \x03(\v2\x16.flipt.core.ConstraintR\vconstraints\"\xac\x01\n" +
	"\n" +
	"Constraint\x12.\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1a.flipt.core.ComparisonTypeR\x04type\x12\x1a\n" +
	"\bproperty\x18\x02 \x01(\tR\bproperty\x12\x1a\n" +
	"\boperator\x18\x03 \x01(\tR\boperator\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription*8\n" +
	"\bFlagType\x12\x15\n" +
	"\x11VARIANT_FLAG_TYPE\x10\x00\x12\x15\n" +
	"\x11BOOLEAN_FLAG_TYPE\x10\x01*D\n" +
	"\x0fSegmentOperator\x12\x17\n" +
	"\x13OR_SEGMENT_OPERATOR\x10\x00\x12\x18\n" +
	"\x14AND_SEGMENT_OPERATOR\x10\x01*]\n" +
	"\vRolloutType\x12\x18\n" +
	"\x14UNKNOWN_ROLLOUT_TYPE\x10\x00\x12\x18\n" +
	"\x14SEGMENT_ROLLOUT_TYPE\x10\x01\x12\x1a\n" +
	"\x16THRESHOLD_ROLLOUT_TYPE\x10\x02*3\n" +
	"\tMatchType\x12\x12\n" +
	"\x0eALL_MATCH_TYPE\x10\x00\x12\x12\n" +
	"\x0eANY_MATCH_TYPE\x10\x01*\xbf\x01\n" +
	"\x0eComparisonType\x12\x1b\n" +
	"\x17UNKNOWN_COMPARISON_TYPE\x10\x00\x12\x1a\n" +
	"\x16STRING_COMPARISON_TYPE\x10\x01\x12\x1a\n" +
	"\x16NUMBER_COMPARISON_TYPE\x10\x02\x12\x1b\n" +
	"\x17BOOLEAN_COMPARISON_TYPE\x10\x03\x12\x1c\n" +
	"\x18DATETIME_COMPARISON_TYPE\x10\x04\x12\x1d\n" +
	"\x19ENTITY_ID_COMPARISON_TYPE\x10\x05B\"Z go.flipt.io/flipt/rpc/flipt/coreb\x06proto3"

var (
	file_core_core_proto_rawDescOnce sync.Once
	file_core_core_proto_rawDescData []byte
)

func file_core_core_proto_rawDescGZIP() []byte {
	file_core_core_proto_rawDescOnce.Do(func() {
		file_core_core_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_core_core_proto_rawDesc), len(file_core_core_proto_rawDesc)))
	})
	return file_core_core_proto_rawDescData
}

var file_core_core_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_core_core_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_core_core_proto_goTypes = []any{
	(FlagType)(0),            // 0: flipt.core.FlagType
	(SegmentOperator)(0),     // 1: flipt.core.SegmentOperator
	(RolloutType)(0),         // 2: flipt.core.RolloutType
	(MatchType)(0),           // 3: flipt.core.MatchType
	(ComparisonType)(0),      // 4: flipt.core.ComparisonType
	(*Flag)(nil),             // 5: flipt.core.Flag
	(*Variant)(nil),          // 6: flipt.core.Variant
	(*Rule)(nil),             // 7: flipt.core.Rule
	(*Distribution)(nil),     // 8: flipt.core.Distribution
	(*Rollout)(nil),          // 9: flipt.core.Rollout
	(*RolloutSegment)(nil),   // 10: flipt.core.RolloutSegment
	(*RolloutThreshold)(nil), // 11: flipt.core.RolloutThreshold
	(*Segment)(nil),          // 12: flipt.core.Segment
	(*Constraint)(nil),       // 13: flipt.core.Constraint
	(*structpb.Struct)(nil),  // 14: google.protobuf.Struct
	(*structpb.Value)(nil),   // 15: google.protobuf.Value
}
var file_core_core_proto_depIdxs = []int32{
	0,  // 0: flipt.core.Flag.type:type_name -> flipt.core.FlagType
	6,  // 1: flipt.core.Flag.variants:type_name -> flipt.core.Variant
	7,  // 2: flipt.core.Flag.rules:type_name -> flipt.core.Rule
	9,  // 3: flipt.core.Flag.rollouts:type_name -> flipt.core.Rollout
	14, // 4: flipt.core.Flag.metadata:type_name -> google.protobuf.Struct
	15, // 5: flipt.core.Variant.attachment:type_name -> google.protobuf.Value
	1,  // 6: flipt.core.Rule.segment_operator:type_name -> flipt.core.SegmentOperator
	8,  // 7: flipt.core.Rule.distributions:type_name -> flipt.core.Distribution
	2,  // 8: flipt.core.Rollout.type:type_name -> flipt.core.RolloutType
	10, // 9: flipt.core.Rollout.segment:type_name -> flipt.core.RolloutSegment
	11, // 10: flipt.core.Rollout.threshold:type_name -> flipt.core.RolloutThreshold
	1,  // 11: flipt.core.RolloutSegment.segment_operator:type_name -> flipt.core.SegmentOperator
	3,  // 12: flipt.core.Segment.match_type:type_name -> flipt.core.MatchType
	13, // 13: flipt.core.Segment.constraints:type_name -> flipt.core.Constraint
	4,  // 14: flipt.core.Constraint.type:type_name -> flipt.core.ComparisonType
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_core_core_proto_init() }
func file_core_core_proto_init() {
	if File_core_core_proto != nil {
		return
	}
	file_core_core_proto_msgTypes[0].OneofWrappers = []any{}
	file_core_core_proto_msgTypes[1].OneofWrappers = []any{}
	file_core_core_proto_msgTypes[4].OneofWrappers = []any{
		(*Rollout_Segment)(nil),
		(*Rollout_Threshold)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_core_core_proto_rawDesc), len(file_core_core_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_core_proto_goTypes,
		DependencyIndexes: file_core_core_proto_depIdxs,
		EnumInfos:         file_core_core_proto_enumTypes,
		MessageInfos:      file_core_core_proto_msgTypes,
	}.Build()
	File_core_core_proto = out.File
	file_core_core_proto_goTypes = nil
	file_core_core_proto_depIdxs = nil
}
