name: Release
on:
  push:
    tags:
      - "v2*"

permissions:
  contents: write
  packages: write

env:
  GO_VERSION: "1.25"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: linux
          - os: macos-latest
            name: darwin
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache: true

      - uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install GCC for arm64
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && \
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install Quill
        if: matrix.os == 'macos-latest'
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/quill/main/install.sh | sh -s -- -b $GITHUB_WORKSPACE/bin
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH

      - name: Install Mage
        uses: magefile/mage-action@v3
        with:
          # mac build currently doesn't exist for v1.15.0 https://github.com/magefile/mage/issues/481
          version: v1.14.0
          install-only: true

      - name: Prep Build
        run: mage prep
        env:
          FLIPT_FORMBRICKS_ENVIRONMENT_ID: ${{ secrets.FLIPT_FORMBRICKS_ENVIRONMENT_ID }}

      - name: GoReleaser Build
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: "~> v2.8.0"
          args: build --clean -f .goreleaser.${{ matrix.name }}.yml
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANALYTICS_WRITE_KEY: ${{ secrets.ANALYTICS_WRITE_KEY }}
          ANALYTICS_WRITE_ENDPOINT: ${{ secrets.ANALYTICS_WRITE_ENDPOINT }}
          QUILL_SIGN_P12: ${{ secrets.QUILL_SIGN_P12 }}
          QUILL_SIGN_PASSWORD: ${{ secrets.QUILL_SIGN_PASSWORD }}
          KEYGEN_VERIFY_KEY: ${{ secrets.KEYGEN_VERIFY_KEY }}
          KEYGEN_ACCOUNT_ID: ${{ secrets.KEYGEN_ACCOUNT_ID }}
          KEYGEN_PRODUCT_ID: ${{ secrets.KEYGEN_PRODUCT_ID }}

      - uses: actions/upload-artifact@v4
        with:
          name: flipt-${{ matrix.name }}
          path: dist/flipt_${{ matrix.name }}_*/flipt

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache: true

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - uses: actions/download-artifact@v5
        with:
          name: flipt-linux
          path: tmp/dist

      - uses: actions/download-artifact@v5
        with:
          name: flipt-darwin
          path: tmp/dist

      - name: Install Skopeo
        run: |
          sudo apt-get update
          sudo apt-get -y install skopeo

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: "${{ github.repository_owner }}"
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.FLIPT_RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.FLIPT_RELEASE_BOT_APP_PEM }}
          owner: ${{ github.repository_owner }}

      - name: Install Mage
        uses: magefile/mage-action@v3
        with:
          # mac build currently doesn't exist for v1.15.0 https://github.com/magefile/mage/issues/481
          version: v1.14.0
          install-only: true

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: "~> v2.8.0"
          args: release --clean
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          DISCORD_WEBHOOK_ID: ${{ secrets.DISCORD_WEBHOOK_ID }}
          DISCORD_WEBHOOK_TOKEN: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}

  update-helm-chart:
    name: Update Helm Chart
    runs-on: ubuntu-latest
    needs: release
    if: success()
    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.FLIPT_RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.FLIPT_RELEASE_BOT_APP_PEM }}
          owner: ${{ github.repository_owner }}
          repositories: helm-charts

      - name: Trigger Helm Chart Update
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "Triggering helm-chart update workflow for release ${{ github.ref_name }}"
          gh workflow run update.yml -R flipt-io/helm-charts -f tag="${{ github.ref_name }}"
