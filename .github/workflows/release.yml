name: Release
on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: linux
          - os: macos-latest
            name: darwin
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          check-latest: true
          cache: true

      - uses: actions/cache@v3
        with:
          path: _tools/
          key: ${{ runner.os }}-go-tools${{ hashFiles('_tools/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-tools-

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install GCC for arm64
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && \
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install Quill
        if: matrix.os == 'macos-latest'
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/quill/main/install.sh | sh -s -- -b $GITHUB_WORKSPACE/bin
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH

      - uses: magefile/mage-action@v2
        with:
          version: latest
          args: prep

      - name: GoReleaser Build
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser-pro
          version: latest
          args: build --clean -f .goreleaser.${{ matrix.name }}.yml
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANALYTICS_KEY: ${{ secrets.ANALYTICS_KEY }}
          QUILL_SIGN_P12: ${{ secrets.QUILL_SIGN_P12 }}
          QUILL_SIGN_PASSWORD: ${{ secrets.QUILL_SIGN_PASSWORD }}

      - uses: actions/upload-artifact@v3
        with:
          name: flipt-${{ matrix.name }}
          path: dist/flipt_${{ matrix.name }}_*/flipt

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          check-latest: true
          cache: true

      - uses: docker/setup-qemu-action@v2

      - uses: docker/setup-buildx-action@v2

      - uses: actions/download-artifact@v3
        with:
          name: flipt-linux
          path: tmp/dist

      - uses: actions/download-artifact@v3
        with:
          name: flipt-darwin
          path: tmp/dist

      - name: Install Skopeo
        run: |
          sudo apt-get update
          sudo apt-get -y install skopeo

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: "${{ github.repository_owner }}"
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: GeorgeMac/mage-action@gm/tools-add-path-debug
        with:
          version: latest
          args: prep

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.FLIPT_RELEASE_BOT_APP_ID }}
          private_key: ${{ secrets.FLIPT_RELEASE_BOT_APP_PEM }}
          installation_id: ${{ secrets.FLIPT_RELEASE_BOT_INSTALLATION_ID }}

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --clean
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          ANALYTICS_KEY: ${{ secrets.ANALYTICS_KEY }}
          DISCORD_WEBHOOK_ID: ${{ secrets.DISCORD_WEBHOOK_ID }}
          DISCORD_WEBHOOK_TOKEN: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}

      - name: Tag and Push latest
        env:
          TAG: ${{ github.ref_name }}
        run: |
          cd build

          if [[ $TAG == $(mage release:latest go.flipt.io/flipt) ]]; then
            docker pull flipt/flipt:$TAG
            skopeo copy --all docker://flipt/flipt:$TAG docker://flipt/flipt:latest

            docker pull markphelps/flipt:$TAG
            skopeo copy --all docker://markphelps/flipt:$TAG docker://markphelps/flipt:latest

            docker pull ghcr.io/flipt-io/flipt:$TAG
            skopeo copy --all docker://ghcr.io/flipt-io/flipt:$TAG docker://ghcr.io/flipt-io/flipt:latest
          fi
