name: Nightly Build
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *" # nightly @ 10:30 PM UTC

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v4
        with:
          go-version: "1.18"
          check-latest: true
          cache: true

      - uses: actions/cache@v3
        with:
          path: _tools/
          key: ${{ runner.os }}-go-tools${{ hashFiles('_tools/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-tools-

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - uses: docker/setup-qemu-action@v2

      - uses: docker/setup-buildx-action@v2

      - name: Install GCC for arm64
        run: |
          sudo apt-get update && \
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - uses: actions/checkout@v3
        with:
          repository: flipt-io/flipt-ui
          path: .build/ui

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: "${{ github.repository_owner }}"
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: magefile/mage-action@v2
        with:
          version: latest
          args: prep

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser-pro
          version: latest
          args: release -f .goreleaser.nightly.yml --rm-dist --nightly
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANALYTICS_KEY: ${{ secrets.ANALYTICS_KEY }}

  stackhawk:
    name: HawkScan
    runs-on: ubuntu-latest
    needs: release
    services:
      flipt:
        image: flipt/flipt:nightly # <-- this is the image name from the previous job
        ports:
          - 8080:8080

    steps:
      - uses: actions/checkout@v3

      - name: Download OpenAPI Spec
        run: |
          curl -s -o openapi.yml https://raw.githubusercontent.com/flipt-io/flipt-openapi/main/openapi.yml

      - name: Update HawkScan Configuration
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.app.env = "Nightly"' stackhawk.yml

      - name: Run HawkScan
        uses: stackhawk/hawkscan-action@v2.0.2
        with:
          apiKey: ${{ secrets.HAWK_API_KEY }}
