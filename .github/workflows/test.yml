name: Lint/Test
on:
  push:
    branches:
      - master
    paths-ignore:
      - "deploy/**"
      - "examples/**"
      - "logos/**"
      - "**.md"
      - "**.txt"
      - "**.ya?ml"
  pull_request:
    paths-ignore:
      - "deploy/**"
      - "examples/**"
      - "logos/**"
      - "**.md"
      - "**.txt"
      - "**.ya?ml"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: "1.17.x"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.44

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["1.17.x", "1.18.x"]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Unit Test (SQLite)
        run: go test -covermode=count -coverprofile=coverage.txt -count=1 ./...

      - name: Coverage
        uses: codecov/codecov-action@v3.1.0
