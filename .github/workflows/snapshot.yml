name: Release (Snapshot)
on:
  workflow_dispatch:
  pull_request:
    branches:
      - "release/*"

jobs:
  snapshot-build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          check-latest: true
          cache: true

      - uses: actions/cache@v3
        with:
          path: _tools/
          key: ${{ runner.os }}-go-tools${{ hashFiles('_tools/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-tools-

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - uses: docker/setup-qemu-action@v2
        if: matrix.os == 'ubuntu-latest'

      - uses: docker/setup-buildx-action@v2
        if: matrix.os == 'ubuntu-latest'

      - name: Install GCC for arm64
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && \
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - uses: magefile/mage-action@v2
        with:
          version: latest
          args: prep

      - name: GoReleaser (Snapshot) Linux
        if: matrix.os == 'ubuntu-latest'
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --clean --snapshot -f .goreleaser.linux.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANALYTICS_KEY: ${{ secrets.ANALYTICS_KEY }}

      - name: GoReleaser (Snapshot) MacOS
        if: matrix.os == 'macos-latest'
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --clean --snapshot -f .goreleaser.darwin.yml
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANALYTICS_KEY: ${{ secrets.ANALYTICS_KEY }}

      - uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          name: flipt-linux
          path: dist/flipt_linux_*/flipt

      - uses: actions/upload-artifact@v2
        if: matrix.os == 'macos-latest'
        with:
          name: flipt-darwin
          path: dist/flipt_darwin_*/flipt
