// Code generated by protoc-gen-go-flipt-sdk. DO NOT EDIT.

package http

import (
	sdk "go.flipt.io/flipt/sdk"
	status "google.golang.org/genproto/googleapis/rpc/status"
	status1 "google.golang.org/grpc/status"
	protojson "google.golang.org/protobuf/encoding/protojson"
	http "net/http"
)

var _ sdk.Transport = Transport{}

type Transport struct {
	client *http.Client
	addr   string
}

type Option func(*Transport)

func WithHTTPClient(client *http.Client) Option {
	return func(t *Transport) { t.client = client }
}

func NewTransport(addr string, opts ...Option) Transport {
	t := Transport{
		client: http.DefaultClient,
		addr:   addr,
	}
	for _, opt := range opts {
		opt(&t)
	}
	return t
}

func checkResponse(resp *http.Response, v []byte) error {
	if resp.StatusCode != http.StatusOK {
		var status status.Status
		if err := protojson.Unmarshal(v, &status); err != nil {
			return err
		}
		return status1.ErrorProto(&status)
	}

	return nil
}
