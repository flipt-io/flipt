// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.177.0/containers/docker-existing-dockerfile
{
  "name": "Flipt",
  "image": "ghcr.io/markphelps/flipt-dev",
  // "build": {
  //   "context": "..",
  //   "dockerfile": "../Dockerfile"
  // },
  // Set *default* container specific settings.json values on container create.
  "settings": {
    "go.toolsManagement.checkForUpdates": "local",
    "go.gopath": "/go",
    "go.useLanguageServer": true,
    "go.formatTool": "goimports",
    "go.lintTool": "golangci-lint",
    "go.lintFlags": ["--fast"]
  },
  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "golang.Go",
    "gamunu.vscode-yarn",
    "dbaeumer.vscode-eslint",
    "octref.vetur",
    "zxh404.vscode-proto3",
    "esbenp.prettier-vscode"
  ],
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [8080, 9000],
  "portsAttributes": {
    "8080": {
      "label": "HTTP Port",
      "onAutoForward": "notify"
    },
    "8081": {
      "label": "UI Dev Port",
      "onAutoForward": "notify"
    },
    "9000": {
      "label": "GRPC Port",
      "onAutoForward": "notify"
    }
  },
  // Uncomment the next line to run commands after the container is created - for example installing curl.
  "postCreateCommand": "task bootstrap assets:deps"
  // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
  // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
  // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
  // "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
  // Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
  // "remoteUser": "vscode"
  // "remoteEnv": {}
}
